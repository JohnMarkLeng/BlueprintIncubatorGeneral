{"version":3,"sources":["firebase/firebase.js","actions/auth.js","components/ForgotpassPage.js","components/SignupPage.js","components/LoginPage.js","components/AddReview.js","components/Stars.js","components/ReviewPage.js","components/NavBar.js","actions/IdleTimer.js","components/CoursesPage.js","actions/Typewriter.js","components/LandingPage.js","App.js","reducers/auth.js","reducers/index.js","Root.js","configureStore.js","reportWebVitals.js","index.js"],"names":["myFirebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","receiveLogin","user","type","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged","ForgotpassPage","props","useState","setEmail","emailMatch","length","Grid","container","spacing","direction","alignItems","justify","style","minHeight","backgroundColor","borderRadius","textAlign","onSubmit","e","preventDefault","sendPasswordResetEmail","alert","passwordReset","color","marginBottom","marginLeft","FormControl","minWidth","padding","TextField","required","label","id","variant","value","onChange","target","Button","disabled","useStyles","makeStyles","theme","background","position","top","left","width","height","display","justifyContent","zIndex","SignupPage","classes","firstName","setFirstName","lastName","setLastName","username","setUsername","setPassword","confirmPassword","setConfirmPassword","emailcheck","setEmailcheck","password_length_check","setPasswordLengthCheck","passMatch","setPassMatch","setUpperLowerCheck","emailfakecheck","setEmailfakeCheck","passwordStrength","setPasswordstrengthCheck","submitted","setSubmitted","handleSubmit","event","pass","email_postfix","substring","indexOf","i","temp1","temp2","charAt","test","localeCompare","validateForm","renderForm","errorCode","createUserWithEmailAndPassword","userCredential","sendEmailVerification","code","errorMessage","to","signupWithEmailPassword","updateProfile","displayName","console","log","collection","doc","uid","set","className","Card","undefined","backToLogin","onClick","marginTop","closed","FormHelperText","alignSelf","trigger","connect","state","isLoggingIn","loginError","isAuthenticated","goToSignup","setGoToSignup","src","alt","name","maxHeight","innerBlock","isMobileOnly","maxWidth","flexDirection","AddReview","fromCourse","profList","diffRating","setDiffRating","workloadRating","setWorkloadRating","teachRating","setTeachRating","diffHover","setDiffHover","workloadHover","setWorkloadHover","teachHover","setTeachHover","newCourse","setNewCourse","newCourseCode","setNewCourseCode","prof","setProf","description","setDescription","grade","setGrade","anon","setAnon","tookOnline","setTookOnline","isLoggedIn","setIsLoggedIn","isVerified","setIsVerified","emailSent","sendEmail","otherProf","setOtherProf","clearFields","useEffect","unsubscribe","currentUser","emailVerified","window","location","reload","push","update","profs","add","Typography","fontFamily","fontWeight","Array","map","star","ratingValue","Star","fontSize","cursor","onMouseEnter","onMouseLeave","StarOutline","InputLabel","Select","MenuItem","FormControlLabel","control","Checkbox","checked","multiline","rows","disableElevation","LoginPage","Stars","rating","stars","Math","floor","marginRight","StarHalf","ceil","hideBorder","summaryCard","addReviewButton","expandReviewsButton","ReviewPage","selectedCourse","returnToCoursesPage","setReturnToCoursesPage","reviewList","setReviewList","selectedProf","setSelectedProf","setProfList","redditLinks","setRedditLinks","avgWorkload","setAvgWorkload","avgDiff","setAvgDiff","avgTeach","setAvgTeach","avgOverall","setAvgOverall","buttonPopup","setButtonPopup","expandAllReviews","setExpandAllReviews","get","exists","data","onSnapshot","querySnapshot","reviews","workloadSum","diffSum","teachSum","forEach","overflowX","IconButton","sirsRating","input","InputBase","round","toFixed","align","item","xs","ExpandLess","ExpandMore","review","Accordion","defaultExpanded","expanded","AccordionSummary","aria-controls","AccordionDetails","link","index","href","isLoggingOut","logoutError","fromLandingPage","title","loginPopup","setLoginPopup","signupPopup","setSignupPopup","backToLanding","setBackToLanding","hover","setHover","htmlFor","setTimeout","size","IdleTimer","timeout","onTimeout","onExpired","this","expiredTime","parseInt","localStorage","getItem","Date","now","eventhandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","timeoutTracker","clearTimeout","setItem","addEventListener","removeItem","clearInterval","removeEventListener","withStyles","searchBar","opacity","courseCard","gridList","addCourseButton","courseList","setCourseList","setSelectedCourse","goToReviewPage","setGoToReviewPage","searchTerm","setSearchTerm","isTimeout","setIsTimeout","onCourseClick","text","innerText","course","includes","timer","courses","cleanUp","placeholder","Search","GridList","cols","filter","toLowerCase","replaceAll","GridListTile","onMouseOver","currentTarget","onMouseOut","Typewriter","useRef","currentText","setCurrentText","current","timerId","root","LandingPage","Aos","init","duration","directToCoursesPage","setDirectToCoursesPage","max-height","object-fit","data-aos","textDecoration","isVerifying","exact","path","component","CoursesPage","reducerAuth","action","verifyingError","combineReducers","store","persistedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0083901a.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAcf_D0EltZ5YRx81oWz8kL-j-cMFtQP9I\",\r\n    authDomain: \"blueprintloginpage.firebaseapp.com\",\r\n    projectId: \"blueprintloginpage\",\r\n    storageBucket: \"blueprintloginpage.appspot.com\",\r\n    messagingSenderId: \"908170588527\",\r\n    appId: \"1:908170588527:web:bf100155f1a8b4eb87b89a\",\r\n    measurementId: \"G-GPWLQGTPWE\"\r\n}\r\n\r\nexport const myFirebase = firebase.initializeApp(firebaseConfig);\r\nconst baseDb = myFirebase.firestore();\r\nexport const db = baseDb;","import { Redirect } from \"react-router\";\r\nimport { myFirebase } from \"../firebase/firebase\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE,\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST,\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const loginUser = (email, password) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n  myFirebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      dispatch(receiveLogin(user));\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  myFirebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      dispatch(receiveLogout());\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(logoutError());\r\n    });\r\n};\r\n\r\nexport const verifyAuth = () => (dispatch) => {\r\n  dispatch(verifyRequest());\r\n  myFirebase.auth().onAuthStateChanged((user) => {\r\n    if (user !== null) {\r\n      dispatch(receiveLogin(user));\r\n    }\r\n    dispatch(verifySuccess());\r\n  });\r\n};\r\n\r\nexport const signupWithEmailPassword = (email, password) => {\r\n  // dispatch(requestLogin());\r\n  //var user;\r\n  myFirebase\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      var user = userCredential.user;\r\n      user.sendEmailVerification();\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      var errorCode = error.code;\r\n      var errorMessage = error.errorMessage;\r\n      if (errorCode === \"auth/email-already-in-use\") {\r\n        alert(\"Email Address is already in use\");\r\n        return <Redirect to=\"/login\" />;\r\n      } else if (errorCode === \"auth/invalid-email\") {\r\n        return errorCode;\r\n      } else if (errorCode === \"auth/weak-password\") {\r\n        return errorCode;\r\n      }\r\n    });\r\n};\r\n\r\nexport const passwordReset = (email) => {\r\n  myFirebase\r\n    .auth()\r\n    .sendPasswordResetEmail(email)\r\n    .then(() => {\r\n      alert(\"Please check your email!\");\r\n    });\r\n};\r\n","import { useState } from \"react\";\r\nimport { Grid, TextField, Button, FormControl } from \"@material-ui/core\";\r\nimport { passwordReset } from \"../actions\";\r\n\r\nconst ForgotpassPage = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  let emailMatch = false;\r\n  let buttonDisabled = false;\r\n\r\n  if (setEmail === email && email.length > 0) emailMatch = true;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    passwordReset(email);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: \"100vh\", backgroundColor: \"teal\" }}\r\n    >\r\n      <div style={{ backgroundColor: \"white\", borderRadius: \"5px\" }}>\r\n        <h1 style={{ textAlign: \"center\" }}>Forgot Password</h1>\r\n        <form onSubmit={onSubmit}>\r\n          {!emailMatch && (\r\n            <h4\r\n              style={{ color: \"black\", marginBottom: \"7px\", marginLeft: \"7px\" }}\r\n            >\r\n              Enter your email\r\n            </h4>\r\n          )}\r\n          <FormControl\r\n            style={{ minWidth: \"25vw\", padding: \"25px\", borderRadius: \"25px\" }}\r\n          >\r\n            <TextField\r\n              required\r\n              label=\"Email\"\r\n              id=\"email_field\"\r\n              variant=\"outlined\"\r\n              style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Button\r\n              id=\"#btn-forgotPass\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              style={{ marginBottom: \"7px\", backgroundColor: \"#fb9263\" }}\r\n              disabled={buttonDisabled}\r\n            >\r\n              Send email\r\n            </Button>\r\n          </FormControl>\r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ForgotpassPage;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormHelperText,\r\n  FormControl,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { signupWithEmailPassword } from \"../actions/auth\";\r\nimport { db, myFirebase } from \"../firebase/firebase\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"rgba(52, 52, 52, 0.4)\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: 4,\r\n  },\r\n}));\r\n\r\nconst SignupPage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //const email_postfix1 = '@scarletmail.rutgers.edu';\r\n  const email_postfix2 = \"@rutgers.edu\";\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  // const [majorList, setMajorList] = useState([\"\"]);\r\n  // const [minorList, setMinorList] = useState([\"\"]);\r\n\r\n  const [emailcheck, setEmailcheck] = useState(false);\r\n  const [password_length_check, setPasswordLengthCheck] = useState(false);\r\n  const [passMatch, setPassMatch] = useState(false);\r\n  const [upperlower, setUpperLowerCheck] = useState(false);\r\n  const [emailfakecheck, setEmailfakeCheck] = useState(true);\r\n  const [passwordStrength, setPasswordstrengthCheck] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  // const [majorCheck, setMajorCheck] = useState(true);\r\n\r\n  function validateForm() {\r\n    var pass = true;\r\n\r\n    //validate email address: must be rutgers email\r\n    let email_postfix = email.substring(email.indexOf(\"@\"), email.length);\r\n    if (email.length > 0 && email_postfix === email_postfix2) {\r\n      setEmailcheck(true);\r\n      pass = pass && true;\r\n    } else {\r\n      setEmailcheck(false);\r\n      pass = pass && false;\r\n    }\r\n\r\n    // validate password:\r\n    // must be at least seven digits and include at least one uppercase and one lowercase character\r\n    if (password.length > 0 && password.length <= 6) {\r\n      setPasswordLengthCheck(false);\r\n      pass = pass && false;\r\n    } else {\r\n      setPasswordLengthCheck(true);\r\n      pass = pass && true;\r\n      var i = 0;\r\n      var temp1 = false;\r\n      var temp2 = false;\r\n      while (i <= password.length) {\r\n        if (password.charAt(i) === \"\") {\r\n          i++;\r\n          continue;\r\n        } else if (/^[a-z]*$/.test(password.charAt(i))) {\r\n          temp2 = true;\r\n        } else if (/^[A-Z]*$/.test(password.charAt(i))) {\r\n          temp1 = true;\r\n        }\r\n        i++;\r\n      }\r\n      if (temp1 && temp2) {\r\n        setUpperLowerCheck(true);\r\n        pass = pass && true;\r\n      } else {\r\n        setUpperLowerCheck(false);\r\n        pass = pass && false;\r\n      }\r\n    }\r\n\r\n    //validate password match\r\n    if (password.localeCompare(confirmPassword) === 0) {\r\n      setPassMatch(true);\r\n      pass = pass && true;\r\n    } else {\r\n      setPassMatch(false);\r\n      pass = pass && false;\r\n    }\r\n\r\n    //console.log(majorList[0]);\r\n    // if (majorList[0] !== \"\") {\r\n    //   setMajorCheck(true);\r\n    //   pass = pass && true;\r\n    // } else {\r\n    //   setMajorCheck(false);\r\n    //   pass = pass && false;\r\n    // }\r\n    return pass;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setSubmitted(true);\r\n\r\n    var isValid = validateForm();\r\n    if (isValid) {\r\n      var errorCode = signupWithEmailPassword(email, password);\r\n      if (errorCode === \"auth/invalid-email\") {\r\n        setEmailfakeCheck(false);\r\n        return renderForm();\r\n      } else if (errorCode === \"auth/weak-password\") {\r\n        setPasswordstrengthCheck(false);\r\n        return renderForm();\r\n      } else {\r\n        //console.log(\"arrive\");\r\n        addUser();\r\n        //props.history.push(\"/dashboard\");\r\n      }\r\n    } else {\r\n      return renderForm();\r\n    }\r\n  }\r\n\r\n  // function cleanList(list) {\r\n  //   let majors = list;\r\n  //   for (var i = 0; i < majors.length; i++) {\r\n  //     if (majors[i] === \"\") {\r\n  //       majors.splice(i, 1);\r\n  //     }\r\n  //   }\r\n  //   return majors;\r\n  // }\r\n\r\n  function addUser() {\r\n    // gets current user\r\n    myFirebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // updates display name in Firebase user profile (can be accessed same way as user's uid)\r\n        user\r\n          .updateProfile({\r\n            displayName: username,\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error updating profile: \" + error);\r\n          });\r\n\r\n        // adds additional user info to Firestore \"users\" collection (info that's not a property of Firebase user profile)\r\n        // let majors = cleanList(majorList);\r\n        // let minors = cleanList(minorList);\r\n        db.collection(\"users\")\r\n          .doc(user.uid)\r\n          .set({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            // major: majors,\r\n            // minor: minors,\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // const handleInputChangeMajor = (e, index) => {\r\n  //   const name = e.target.value;\r\n  //   const list = [...majorList];\r\n  //   list[index] = name;\r\n  //   setMajorList(list);\r\n  // };\r\n  // const handleRemoveClickMajor = (index) => {\r\n  //   const list = [...majorList];\r\n  //   list.splice(index, 1);\r\n  //   setMajorList(list);\r\n  // };\r\n\r\n  // const handleAddClickMajor = () => {\r\n  //   setMajorList([...majorList, \"\"]);\r\n  // };\r\n\r\n  // const handleInputChangeMinor = (e, index) => {\r\n  //   const name = e.target.value;\r\n  //   const list = [...minorList];\r\n  //   list[index] = name;\r\n  //   setMinorList(list);\r\n  // };\r\n  // const handleRemoveClickMinor = (index) => {\r\n  //   const list = [...minorList];\r\n  //   list.splice(index, 1);\r\n  //   setMinorList(list);\r\n  // };\r\n\r\n  // const handleAddClickMinor = () => {\r\n  //   setMinorList([...minorList, \"\"]);\r\n  // };\r\n\r\n  function renderForm() {\r\n    return (\r\n      <div className={classes.background}>\r\n        <Card>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Grid container alignItems=\"center\" justify=\"center\">\r\n              <Button\r\n                disabled={props.backToLogin !== undefined ? false : true}\r\n                onClick={props.backToLogin}\r\n                style={{\r\n                  marginTop: \"5px\",\r\n                }}\r\n              >\r\n                {props.backToLogin !== undefined && <ArrowBackIosIcon />}\r\n              </Button>\r\n              <h1\r\n                style={{\r\n                  marginBottom: \"0px\",\r\n                  marginTop: \"5px\",\r\n                  marginLeft: \"auto\",\r\n                }}\r\n              >\r\n                Sign Up\r\n              </h1>\r\n              <Button\r\n                onClick={() => {\r\n                  props.backToLogin !== undefined && props.backToLogin();\r\n                  props.closed();\r\n                }}\r\n                style={{\r\n                  marginTop: \"5px\",\r\n                  marginLeft: \"auto\",\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </Button>\r\n            </Grid>\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl style={{ minWidth: \"25vw\", padding: \"15px\" }}>\r\n                <FormHelperText\r\n                  style={{\r\n                    color: \"red\",\r\n                    marginBottom: \"7px\",\r\n                  }}\r\n                >\r\n                  * Please use your rutgers email ending with @rutgers.edu\r\n                  <br />\r\n                  * Password must be longer than six digits\r\n                  <br />* Password must include at least one uppercase and one\r\n                  lower case letter\r\n                </FormHelperText>\r\n\r\n                <TextField\r\n                  required\r\n                  label=\"First Name\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  label=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {submitted && !emailcheck && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Please use your rutgers email ending with @rutgers.edu\r\n                  </FormHelperText>\r\n                )}\r\n                {!emailfakecheck && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Email address is invalid\r\n                  </FormHelperText>\r\n                )}\r\n                {/* {majorList.map((x, i) => {\r\n                  return (\r\n                    <div key={\"majorListDiv\" + i}>\r\n                      <TextField\r\n                        label=\"Major\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                          marginBottom: \"7px\",\r\n                          backgroundColor: \"#D6EAF8 \",\r\n                        }}\r\n                        value={x}\r\n                        onChange={(e) => handleInputChangeMajor(e, i)}\r\n                      />\r\n                      {majorList.length !== 1 && (\r\n                        <Button\r\n                          //className=\"mr10\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={() => handleRemoveClickMajor(i)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      )}\r\n                      {majorList.length - 1 === i && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={handleAddClickMajor}\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                      {!majorCheck && i === 0 && (\r\n                        <FormHelperText\r\n                          style={{\r\n                            color: \"red\",\r\n                            marginBottom: \"7px\",\r\n                            alignSelf: \"center\",\r\n                          }}\r\n                        >\r\n                          Enter at least one major\r\n                        </FormHelperText>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                {minorList.map((x, i) => {\r\n                  return (\r\n                    <div key={\"minorListDiv\" + i}>\r\n                      <TextField\r\n                        label=\"Minor (if applicable)\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                          marginBottom: \"7px\",\r\n                          backgroundColor: \"#D6EAF8 \",\r\n                        }}\r\n                        value={x}\r\n                        onChange={(e) => handleInputChangeMinor(e, i)}\r\n                      />\r\n                      {minorList.length !== 1 && (\r\n                        <Button\r\n                          //className=\"mr10\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={() => handleRemoveClickMinor(i)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      )}\r\n                      {minorList.length - 1 === i && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={handleAddClickMinor}\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })} */}\r\n                <TextField\r\n                  required\r\n                  label=\"Username\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8\" }}\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {submitted && !password_length_check && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Password is too short\r\n                  </FormHelperText>\r\n                )}\r\n                {!passwordStrength && password_length_check && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Try to use a stronger password\r\n                  </FormHelperText>\r\n                )}\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  label=\"Re-enter Password\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                {submitted && !passMatch && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Passwords Do Not Match\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"#FF7F50\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </FormControl>\r\n            </form>\r\n          </Grid>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (props.trigger) {\r\n    return renderForm();\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default SignupPage;\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormHelperText,\r\n  FormControl,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport SignupPage from \"./SignupPage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"rgba(52, 52, 52, 0.4)\",\r\n\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: 4,\r\n  },\r\n}));\r\n\r\nconst Login = ({ dispatch, loginError, trigger, closed }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [goToSignup, setGoToSignup] = useState(false);\r\n\r\n  const handleEmailChange = ({ target }) => {\r\n    setEmail(target.value);\r\n  };\r\n\r\n  const handlePasswordChange = ({ target }) => {\r\n    setPassword(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(email, password));\r\n  };\r\n\r\n  if (goToSignup) {\r\n    return (\r\n      <SignupPage\r\n        trigger={trigger}\r\n        closed={closed}\r\n        backToLogin={() => {\r\n          setGoToSignup(false);\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      trigger && (\r\n        <div className={classes.background}>\r\n          <Card>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n            >\r\n              <Button\r\n                onClick={closed}\r\n                style={{\r\n                  marginLeft: \"auto\",\r\n                  marginTop: \"5px\",\r\n                }}\r\n              >\r\n                <CancelIcon />\r\n              </Button>\r\n              <img\r\n                src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n                height=\"80\"\r\n                alt=\"\"\r\n                style={{ marginTop: \"15px\" }}\r\n              />\r\n              <h1>Log In</h1>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormControl style={{ minWidth: \"25vw\", padding: \"15px\" }}>\r\n                  <TextField\r\n                    required\r\n                    variant=\"outlined\"\r\n                    style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    onChange={handleEmailChange}\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    variant=\"outlined\"\r\n                    style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                    onChange={handlePasswordChange}\r\n                  />\r\n                  {loginError && (\r\n                    <FormHelperText\r\n                      style={{\r\n                        color: \"red\",\r\n                        marginBottom: \"7px\",\r\n                        alignSelf: \"center\",\r\n                      }}\r\n                    >\r\n                      Incorrect email or password.\r\n                    </FormHelperText>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    style={{ backgroundColor: \"#FF7F50\" }}\r\n                  >\r\n                    Sign In\r\n                  </Button>\r\n                </FormControl>\r\n              </form>\r\n              <Link to=\"/forgotpassword\">Forgot password?</Link>\r\n              <div style={{ marginTop: \"10px\", marginBottom: \"15px\" }}>\r\n                Not a member?{\" \"}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    borderRadius: 25,\r\n                    maxHeight: \"25px\",\r\n                    backgroundColor: \"#FF7F50\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setGoToSignup(true);\r\n                  }}\r\n                >\r\n                  Sign up\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n};\r\n//};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggingIn: state.auth.isLoggingIn,\r\n    loginError: state.auth.loginError,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n  Grid,\r\n  Card,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { Star, StarOutline } from \"@material-ui/icons\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { db, myFirebase } from \"../firebase/firebase\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\n// CSS\r\nconst background = {\r\n  position: \"fixed\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n  backgroundColor: \"rgba(52, 52, 52, 0.4)\",\r\n\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  zIndex: 4,\r\n};\r\nconst innerBlock = {\r\n  position: \"relative\",\r\n  padding: \"32px\",\r\n  width: isMobileOnly ? \"80%\" : \"40%\",\r\n  height: \"80%\",\r\n\r\n  maxWidth: \"800px\",\r\n  backgroundColor: \"#FFF\",\r\n  zIndex: 5,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst AddReview = (props) => {\r\n  const { trigger, closed, fromCourse, profList } = props;\r\n  const [diffRating, setDiffRating] = useState(0);\r\n  const [workloadRating, setWorkloadRating] = useState(0);\r\n  const [teachRating, setTeachRating] = useState(0);\r\n  const [diffHover, setDiffHover] = useState(null);\r\n  const [workloadHover, setWorkloadHover] = useState(null);\r\n  const [teachHover, setTeachHover] = useState(null);\r\n  const [newCourse, setNewCourse] = useState(\"\");\r\n  const [newCourseCode, setNewCourseCode] = useState(\"\");\r\n  const [prof, setProf] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [grade, setGrade] = useState(\"\");\r\n  const [anon, setAnon] = useState(false);\r\n  const [tookOnline, setTookOnline] = useState(false);\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [emailSent, sendEmail] = useState(false);\r\n  const [otherProf, setOtherProf] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (diffRating === 0 || workloadRating === 0 || teachRating === 0) {\r\n      alert(\"Fill out all fields and star ratings!\");\r\n    }\r\n    // if AddReview clicked on from ReviewPage, adds review to \"reviews\" subcollection for course\r\n    else if (fromCourse !== undefined) {\r\n      if (otherProf) {\r\n        profList.push(prof);\r\n        db.collection(\"courses\").doc(fromCourse.code).update({\r\n          profs: profList,\r\n        });\r\n      }\r\n\r\n      db.collection(\"courses/\" + fromCourse.code + \"/reviews\")\r\n        .add({\r\n          diffRating: diffRating,\r\n          workloadRating: workloadRating,\r\n          teachRating: teachRating,\r\n          grade: grade,\r\n          prof: prof,\r\n          description: description,\r\n          user: myFirebase.auth().currentUser.displayName,\r\n          anon: anon,\r\n          tookOnline: tookOnline,\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n      clearFields();\r\n      closed();\r\n    }\r\n    // else, creates new course in \"courses\" then adds review to \"reviews\" subcollection\r\n    else {\r\n      db.collection(\"courses\")\r\n        .doc(newCourseCode)\r\n        .set({\r\n          name: newCourse,\r\n          code: newCourseCode,\r\n          profs: [prof],\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n      db.collection(\"courses\").doc(newCourseCode).collection(\"reviews\").add({\r\n        diffRating: diffRating,\r\n        workloadRating: workloadRating,\r\n        teachRating: teachRating,\r\n        grade: grade,\r\n        prof: prof,\r\n        description: description,\r\n        user: myFirebase.auth().currentUser.displayName,\r\n        anon: anon,\r\n        tookOnline: tookOnline,\r\n      });\r\n\r\n      clearFields();\r\n      closed();\r\n    }\r\n  };\r\n\r\n  function clearFields() {\r\n    setDiffRating(null);\r\n    setWorkloadRating(null);\r\n    setTeachRating(null);\r\n    setDiffHover(null);\r\n    setWorkloadHover(null);\r\n    setTeachHover(null);\r\n    setGrade(null);\r\n    setNewCourse(\"\");\r\n    setNewCourseCode(\"\");\r\n    setProf(\"\");\r\n    setDescription(\"\");\r\n    setOtherProf(false);\r\n    setAnon(false);\r\n    setTookOnline(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = myFirebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n        if (myFirebase.auth().currentUser.emailVerified) {\r\n          setIsVerified(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (prof === \"other\") {\r\n      setOtherProf(true);\r\n      setProf(\"\");\r\n    }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [prof]);\r\n\r\n  if (trigger && isLoggedIn && !isVerified) {\r\n    return (\r\n      <div style={background}>\r\n        <Card style={{ padding: \"15px\" }}>\r\n          <h1>Verify Your Email!</h1>\r\n          <Button\r\n            style={{ backgroundColor: \"#fb9263\" }}\r\n            disabled={emailSent}\r\n            onClick={() => {\r\n              myFirebase.auth().currentUser.sendEmailVerification();\r\n              sendEmail(true);\r\n            }}\r\n          >\r\n            Resend Verification Email\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          <Button\r\n            style={{ backgroundColor: \"#fb9263\" }}\r\n            onClick={() => {\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Refresh Page\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else if (trigger && isVerified) {\r\n    return (\r\n      <div style={background}>\r\n        <Card style={innerBlock}>\r\n          <form style={{ width: \"100%\" }} onSubmit={handleSubmit}>\r\n            <div>\r\n              {/* for spacing on the top */}\r\n              <Typography style={{ fontFamily: \"Poppins\", fontWeight: \"bold\" }}>\r\n                Workload (1 is the MOST work, 5 is the LEAST work): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"workloadLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"workloadRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setWorkloadRating(ratingValue)}\r\n                    />\r\n\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (workloadHover || workloadRating) ? (\r\n                        <Star\r\n                          key={\"workloadStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setWorkloadHover(ratingValue)}\r\n                          onMouseLeave={() => setWorkloadHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"workloadStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setWorkloadHover(ratingValue)}\r\n                          onMouseLeave={() => setWorkloadHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Typography style={{ fontFamily: \"Poppins\", fontWeight: \"bold\" }}>\r\n                Difficulty of Content (1 is the HARDEST, 5 is the EASIEST): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"diffLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"diffRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setDiffRating(ratingValue)}\r\n                    />\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (diffHover || diffRating) ? (\r\n                        <Star\r\n                          key={\"diffStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setDiffHover(ratingValue)}\r\n                          onMouseLeave={() => setDiffHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"diffStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setDiffHover(ratingValue)}\r\n                          onMouseLeave={() => setDiffHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Typography style={{ fontFamily: \"Poppins\", fontWeight: \"bold\" }}>\r\n                Teaching (1 is the WORST, 5 is the BEST): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"teachRatingLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"teachRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setTeachRating(ratingValue)}\r\n                    />\r\n\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (teachHover || teachRating) ? (\r\n                        <Star\r\n                          key={\"profStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setTeachHover(ratingValue)}\r\n                          onMouseLeave={() => setTeachHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"profStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setTeachHover(ratingValue)}\r\n                          onMouseLeave={() => setTeachHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <TextField\r\n                id=\"courseName\"\r\n                required\r\n                variant={isMobileOnly ? \"standard\" : \"outlined\"}\r\n                style={{ width: \"60%\" }}\r\n                label=\"Course:\"\r\n                disabled={fromCourse !== undefined ? true : false}\r\n                value={fromCourse !== undefined ? fromCourse.name : newCourse}\r\n                onChange={(e) => setNewCourse(e.target.value)}\r\n              />\r\n              <TextField\r\n                id=\"courseCode\"\r\n                required\r\n                variant={isMobileOnly ? \"standard\" : \"outlined\"}\r\n                style={{ width: \"30%\", marginLeft: \"10px\" }}\r\n                label=\"Code:\"\r\n                disabled={fromCourse !== undefined ? true : false}\r\n                value={\r\n                  fromCourse !== undefined ? fromCourse.code : newCourseCode\r\n                }\r\n                onChange={(e) => setNewCourseCode(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"5px\" }}>\r\n              {otherProf || fromCourse === undefined ? (\r\n                <TextField\r\n                  id=\"professor\"\r\n                  required\r\n                  variant={isMobileOnly ? \"standard\" : \"outlined\"}\r\n                  style={{ width: \"50%\" }}\r\n                  label=\"Professor\"\r\n                  value={prof}\r\n                  onChange={(e) => setProf(e.target.value)}\r\n                />\r\n              ) : (\r\n                <FormControl required style={{ width: \"45%\" }}>\r\n                  <InputLabel style={{ marginLeft: !isMobileOnly && \"5px\" }}>\r\n                    Professor\r\n                  </InputLabel>\r\n                  <Select\r\n                    value={prof}\r\n                    onChange={(e) => {\r\n                      setProf(e.target.value);\r\n                    }}\r\n                    variant={isMobileOnly ? \"standard\" : \"outlined\"}\r\n                  >\r\n                    {profList.map((prof) => {\r\n                      return (\r\n                        <MenuItem key={prof + \"key\"} value={prof}>\r\n                          {prof}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                    <MenuItem value={\"other\"}>\r\n                      Other (Enter Professor Manually)\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n\r\n              <FormControl\r\n                required\r\n                style={{ width: \"45%\", marginLeft: \"10px\" }}\r\n              >\r\n                <InputLabel style={{ marginLeft: !isMobileOnly && \"5px\" }}>\r\n                  Grade Received\r\n                </InputLabel>\r\n                <Select\r\n                  value={grade}\r\n                  onChange={(e) => setGrade(e.target.value)}\r\n                  variant={isMobileOnly ? \"standard\" : \"outlined\"}\r\n                >\r\n                  <MenuItem value={\"A\"}>A</MenuItem>\r\n                  <MenuItem value={\"B+\"}>B+</MenuItem>\r\n                  <MenuItem value={\"B\"}>B</MenuItem>\r\n                  <MenuItem value={\"C+\"}>C+</MenuItem>\r\n                  <MenuItem value={\"C\"}>C</MenuItem>\r\n                  <MenuItem value={\"PA\"}>PA</MenuItem>\r\n                  <MenuItem value={\"D\"}>D</MenuItem>\r\n                  <MenuItem value={\"F\"}>F</MenuItem>\r\n                  <MenuItem value={\"N/A\"}>N/A</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <FormControlLabel\r\n                label=\"Took Class Online\"\r\n                control={\r\n                  <Checkbox\r\n                    style={{ color: \"#69b4cf\" }}\r\n                    checked={tookOnline}\r\n                    onClick={() => {\r\n                      setTookOnline(!tookOnline);\r\n                    }}\r\n                  />\r\n                }\r\n              />\r\n\r\n              <FormControlLabel\r\n                style={{ marginLeft: \"10px\" }}\r\n                label=\"Post Anonymously\"\r\n                control={\r\n                  <Checkbox\r\n                    style={{ color: \"#69b4cf\" }}\r\n                    checked={anon}\r\n                    onClick={() => {\r\n                      setAnon(!anon);\r\n                    }}\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <TextField\r\n              id=\"description\"\r\n              required\r\n              style={{ width: \"80%\", marginBottom: \"20px\" }}\r\n              label=\"Enter Your Detailed Review:\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              multiline\r\n              rows={5}\r\n            />\r\n\r\n            <Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                disableElevation\r\n                style={{ backgroundColor: \"#fb9263\" }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  clearFields();\r\n                }}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                style={{ marginLeft: \"10px\", backgroundColor: \"#69b4cf\" }}\r\n              >\r\n                Reset\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={closed}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                style={{ marginLeft: \"10px\", backgroundColor: \"#bdf4ff\" }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <LoginPage trigger={trigger} closed={closed} />;\r\n  }\r\n};\r\n\r\nexport default AddReview;\r\n","import { Star, StarOutline, StarHalf } from \"@material-ui/icons\";\r\n\r\nconst Stars = ({ rating, user }) => {\r\n  const stars = [];\r\n\r\n  // adds rating(rounded down to nearest whole number) filled stars to stars array\r\n  for (let i = 1; i <= Math.floor(rating); i++) {\r\n    stars.push(\r\n      <Star\r\n        key={user + \"star\" + i}\r\n        style={{ color: \"white\", marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // adds half star to stars array if rating decimal >= 0.25\r\n  if (rating - Math.floor(rating) >= 0.25) {\r\n    stars.push(\r\n      <StarHalf\r\n        key={user + \"halfStar\"}\r\n        style={{ color: \"white\", marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // adds outlined star to stars array if rating decimal < 0.25\r\n  if (rating - Math.floor(rating) > 0 && rating - Math.floor(rating) < 0.25) {\r\n    stars.push(\r\n      <StarOutline key={user + \"outlinedStar\"} style={{ marginRight: \"5px\" }} />\r\n    );\r\n  }\r\n\r\n  // adds 5 - (rating rounded up to nearest whole number) outlined stars to stars array\r\n  for (let i = 1; i <= 5 - Math.ceil(rating); i++) {\r\n    stars.push(\r\n      <StarOutline\r\n        key={user + \"outlinedStar\" + i}\r\n        style={{ marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div>{stars}</div>;\r\n};\r\n\r\nexport default Stars;\r\n","import { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { ArrowBackIos, ExpandMore, ExpandLess } from \"@material-ui/icons\";\r\nimport CoursesPage from \"./CoursesPage\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Button,\r\n  InputBase,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport AddReview from \"./AddReview\";\r\nimport Stars from \"./Stars\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hideBorder: {\r\n    \"&.MuiAccordion-root:before\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  summaryCard: {\r\n    backgroundColor: \"#FF7F50\",\r\n    width: isMobileOnly ? \"85vw\" : \"75vw\",\r\n    padding: \"25px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  addReviewButton: {\r\n    width: isMobileOnly ? \"50vw\" : \"20vw\",\r\n    height: \"2rem\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#bdf4ff\",\r\n    marginTop: \"25px\",\r\n  },\r\n  expandReviewsButton: {\r\n    borderRadius: 25,\r\n    backgroundColor: \"#FF7F50\",\r\n    width: isMobileOnly ? \"50vw\" : \"16vw\",\r\n  },\r\n}));\r\n\r\nconst ReviewPage = ({ selectedCourse }) => {\r\n  const classes = useStyles();\r\n  const [returnToCoursesPage, setReturnToCoursesPage] = useState(false); // when true, returns CoursesPage component\r\n  const [reviewList, setReviewList] = useState([]); // list of reviews\r\n  const [selectedProf, setSelectedProf] = useState(\"All Professors\");\r\n  const [profList, setProfList] = useState([]);\r\n  const [redditLinks, setRedditLinks] = useState([]);\r\n  const [avgWorkload, setAvgWorkload] = useState(0);\r\n  const [avgDiff, setAvgDiff] = useState(0);\r\n  const [avgTeach, setAvgTeach] = useState(0);\r\n  const [avgOverall, setAvgOverall] = useState(0); // avgRating of all reviews for course\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [expandAllReviews, setExpandAllReviews] = useState(true);\r\n\r\n  const popUpAddReview = () => {\r\n    setButtonPopup(true);\r\n  };\r\n\r\n  const closePopUp = () => {\r\n    setButtonPopup(false);\r\n  };\r\n\r\n  // handles when back button is clicked\r\n  const handleReturnToCoursesPage = () => {\r\n    setReturnToCoursesPage(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"courses/\")\r\n      .doc(selectedCourse.code)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const profs = [];\r\n          const redditLinks = [];\r\n          if (doc.data().profs !== undefined && doc.data().profs.length > 0) {\r\n            for (let i = 0; i < doc.data().profs.length; i++) {\r\n              profs.push(doc.data().profs[i]);\r\n            }\r\n          }\r\n          if (\r\n            doc.data().redditLinks !== undefined &&\r\n            doc.data().redditLinks.length > 0\r\n          ) {\r\n            for (let i = 0; i < doc.data().redditLinks.length; i++) {\r\n              redditLinks.push(doc.data().redditLinks[i]);\r\n            }\r\n          }\r\n          setProfList(profs);\r\n          setRedditLinks(redditLinks);\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n\r\n    // receives review data from Firebase and updates reviewList and avgRating in state\r\n    const unsubscribe = db\r\n      .collection(\"courses/\" + selectedCourse.code + \"/reviews\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const reviews = [];\r\n        let workloadSum = 0;\r\n        let diffSum = 0;\r\n        let teachSum = 0;\r\n        querySnapshot.forEach((doc) => {\r\n          if (selectedProf === \"All Professors\") {\r\n            reviews.push(doc.data());\r\n            workloadSum += doc.data().workloadRating;\r\n            diffSum += doc.data().diffRating;\r\n            teachSum += doc.data().teachRating;\r\n          } else if (doc.data().prof === selectedProf) {\r\n            reviews.push(doc.data());\r\n            workloadSum += doc.data().workloadRating;\r\n            diffSum += doc.data().diffRating;\r\n            teachSum += doc.data().teachRating;\r\n          }\r\n        });\r\n        setReviewList(reviews);\r\n        setAvgWorkload(workloadSum / reviews.length);\r\n        setAvgDiff(diffSum / reviews.length);\r\n        setAvgTeach(teachSum / reviews.length);\r\n        setAvgOverall(\r\n          (workloadSum / reviews.length +\r\n            diffSum / reviews.length +\r\n            teachSum / reviews.length) /\r\n            3\r\n        );\r\n      });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [selectedCourse, selectedProf]);\r\n\r\n  if (returnToCoursesPage) {\r\n    return <CoursesPage />;\r\n  } else {\r\n    return (\r\n      <div style={{ overflowX: \"hidden\" }}>\r\n        <Grid container style={{ backgroundColor: \"#69b4cf\" }}>\r\n          <IconButton onClick={handleReturnToCoursesPage}>\r\n            <ArrowBackIos style={{ color: \"white\" }} />\r\n          </IconButton>\r\n          <img\r\n            src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n            height=\"50\"\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n              marginBottom: \"5px\",\r\n            }}\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        <Card className={classes.summaryCard}>\r\n          <Grid container alignItems=\"center\">\r\n            <div id=\"left\">\r\n              <h2>{selectedCourse.name}</h2>\r\n              <Grid container style={{ alignItems: \"center\" }}>\r\n                <Typography style={{ fontSize: 20 }}>\r\n                  {selectedCourse.code}\r\n                </Typography>\r\n                <Card\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: 25,\r\n                    height: \"30px\",\r\n                    width: \"150px\",\r\n                    marginLeft: \"10px\",\r\n                  }}\r\n                >\r\n                  <center>\r\n                    <h5 style={{ marginTop: \"5px\" }}>\r\n                      SIRS Rating: {selectedCourse.sirsRating} / 5\r\n                    </h5>\r\n                  </center>\r\n                </Card>\r\n              </Grid>\r\n              <br />\r\n              <Grid container>\r\n                {isMobileOnly ? (\r\n                  <h4>Showing averages for</h4>\r\n                ) : (\r\n                  <h3>Showing averages for</h3>\r\n                )}\r\n\r\n                <FormControl\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    marginLeft: \"10px\",\r\n                    marginTop: \"15px\",\r\n                    height: 30,\r\n                    padding: \"5px\",\r\n                    borderRadius: 25,\r\n                  }}\r\n                >\r\n                  <Select\r\n                    value={selectedProf}\r\n                    onChange={(e) => {\r\n                      setSelectedProf(e.target.value);\r\n                    }}\r\n                    input={<InputBase />}\r\n                  >\r\n                    <MenuItem key={\"All Profs key\"} value={\"All Professors\"}>\r\n                      All Professors\r\n                    </MenuItem>\r\n                    {profList.map((prof) => {\r\n                      return (\r\n                        <MenuItem key={prof + \"key\"} value={prof}>\r\n                          {prof}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div\r\n              id=\"middle\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"auto\",\r\n              }}\r\n            >\r\n              <Grid container>\r\n                <h3>Workload:</h3>\r\n                <div style={{ marginTop: \"18px\", marginLeft: \"10px\" }}>\r\n                  <Stars rating={avgWorkload} user={\"average\"} />\r\n                </div>\r\n              </Grid>\r\n              <Grid container>\r\n                <h3>Difficulty:</h3>\r\n                <div style={{ marginTop: \"18px\", marginLeft: \"10px\" }}>\r\n                  <Stars rating={avgDiff} user={\"average\"} />\r\n                </div>\r\n              </Grid>\r\n              <Grid container>\r\n                <h3>Teaching:</h3>\r\n                <div style={{ marginTop: \"18px\", marginLeft: \"10px\" }}>\r\n                  <Stars rating={avgTeach} user={\"average\"} />\r\n                </div>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div id=\"right\" style={{ marginLeft: \"auto\" }}>\r\n              <center>\r\n                <h1 style={{ marginBottom: \"0px\" }}>\r\n                  {(Math.round(avgOverall * 100) / 100).toFixed(2)} / 5\r\n                </h1>\r\n                <h3 style={{ marginTop: \"0px\" }}>overall rating</h3>\r\n                <h3>{reviewList.length} reviews</h3>\r\n              </center>\r\n            </div>\r\n          </Grid>\r\n        </Card>\r\n\r\n        <div align=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            className={classes.addReviewButton}\r\n            onClick={popUpAddReview}\r\n          >\r\n            Write a Review\r\n          </Button>\r\n          <AddReview\r\n            trigger={buttonPopup}\r\n            closed={closePopUp}\r\n            profList={profList}\r\n            fromCourse={selectedCourse}\r\n          />\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ marginBottom: \"15px\" }}\r\n        >\r\n          <Grid item xs={isMobileOnly ? 5 : 6}>\r\n            <h1>Reviews</h1>\r\n          </Grid>\r\n          <Grid item xs={isMobileOnly ? 6 : 2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.expandReviewsButton}\r\n              onClick={() => {\r\n                setExpandAllReviews(!expandAllReviews);\r\n              }}\r\n            >\r\n              {expandAllReviews ? \"minimize all reviews\" : \"expand all reviews\"}\r\n              {expandAllReviews ? <ExpandLess /> : <ExpandMore />}\r\n            </Button>\r\n          </Grid>\r\n          {reviewList.map((review, i) => (\r\n            <Accordion\r\n              key={\"accordian\" + i}\r\n              defaultExpanded\r\n              expanded={expandAllReviews}\r\n              className={classes.hideBorder}\r\n              style={{\r\n                backgroundColor: \"#69b4cf\",\r\n                borderRadius: 25,\r\n                width: isMobileOnly ? \"90vw\" : \"75vw\",\r\n                marginBottom: \"5px\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <AccordionSummary\r\n                key={\"accordianSummary\" + i}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography\r\n                  key={\"prof\" + i}\r\n                  style={{ color: \"white\", marginRight: \"auto\" }}\r\n                >\r\n                  Professor: {review.prof}\r\n                </Typography>\r\n\r\n                {\r\n                  // if NOT on mobile, shows overallRating (stars) for review in accordianSummary\r\n                  !isMobileOnly && (\r\n                    <Stars\r\n                      rating={\r\n                        (review.workloadRating +\r\n                          review.diffRating +\r\n                          review.teachRating) /\r\n                        3\r\n                      }\r\n                      user={review.user}\r\n                    />\r\n                  )\r\n                }\r\n                {\r\n                  // if NOT on mobile, shows overallRating (number) for review in accordianSummary\r\n                  !isMobileOnly &&\r\n                    (\r\n                      Math.round(\r\n                        ((review.workloadRating +\r\n                          review.diffRating +\r\n                          review.teachRating) /\r\n                          3) *\r\n                          100\r\n                      ) / 100\r\n                    ).toFixed(2)\r\n                }\r\n                {!isMobileOnly && \" overall\"}\r\n\r\n                {\r\n                  // if NOT on mobile, shows grade received for review in accordianSummary\r\n                  !isMobileOnly && (\r\n                    <Typography\r\n                      key={\"grade\" + i}\r\n                      style={{ marginLeft: \"auto\" }}\r\n                    >\r\n                      Grade Received: {review.grade}\r\n                    </Typography>\r\n                  )\r\n                }\r\n\r\n                {!review.anon && (\r\n                  <Typography\r\n                    key={review.user + i}\r\n                    style={{ color: \"white\", marginLeft: \"auto\" }}\r\n                  >\r\n                    {review.user}\r\n                  </Typography>\r\n                )}\r\n                {review.anon && (\r\n                  <Typography\r\n                    key={review.user + i}\r\n                    style={{ marginLeft: \"auto\" }}\r\n                  >\r\n                    anonymous\r\n                  </Typography>\r\n                )}\r\n              </AccordionSummary>\r\n\r\n              <AccordionDetails key={\"accordionDetails\" + i}>\r\n                <Grid container direction=\"column\">\r\n                  {\r\n                    // if ON mobile, shows grade received for review in accordianDetails\r\n                    isMobileOnly && (\r\n                      <Typography\r\n                        key={\"grade\" + i}\r\n                        style={{ marginBottom: \"10px\" }}\r\n                      >\r\n                        Grade Received: {review.grade}\r\n                      </Typography>\r\n                    )\r\n                  }\r\n                  <Grid container direction={isMobileOnly ? \"column\" : \"row\"}>\r\n                    <div>\r\n                      <Grid container direction=\"row\">\r\n                        <Typography\r\n                          style={{ marginRight: \"5px\" }}\r\n                          key={\"workload\" + i}\r\n                        >\r\n                          Workload:\r\n                        </Typography>\r\n                        <Stars\r\n                          rating={review.workloadRating}\r\n                          user={review.user}\r\n                        />\r\n                      </Grid>\r\n                    </div>\r\n                    <div\r\n                      style={\r\n                        isMobileOnly\r\n                          ? { marginTop: \"10px\" }\r\n                          : { marginLeft: \"auto\" }\r\n                      }\r\n                    >\r\n                      <Grid container direction=\"row\">\r\n                        <Typography\r\n                          style={{ marginRight: \"5px\" }}\r\n                          key={\"diff\" + i}\r\n                        >\r\n                          Difficulty Of Content:\r\n                        </Typography>\r\n                        <Stars rating={review.diffRating} user={review.user} />\r\n                      </Grid>\r\n                    </div>\r\n                    <div\r\n                      style={\r\n                        isMobileOnly\r\n                          ? { marginTop: \"10px\" }\r\n                          : { marginLeft: \"auto\" }\r\n                      }\r\n                    >\r\n                      <Grid container direction=\"row\">\r\n                        <Typography\r\n                          style={{ marginRight: \"5px\" }}\r\n                          key={\"teach\" + i}\r\n                        >\r\n                          Teaching:\r\n                        </Typography>\r\n                        <Stars rating={review.teachRating} user={review.user} />\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid container direction=\"row\" style={{ marginTop: \"20px\" }}>\r\n                    <Typography key={\"description\" + i}>\r\n                      {review.description}\r\n                    </Typography>\r\n                    {review.tookOnline && (\r\n                      <Typography\r\n                        key={\"tookOnline\" + i}\r\n                        style={{ color: \"white\", marginLeft: \"auto\" }}\r\n                      >\r\n                        * online class *\r\n                      </Typography>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ marginBottom: \"100px\" }}\r\n        >\r\n          <Grid item xs={isMobileOnly ? 11 : 8}>\r\n            <h1>Useful Reddit Threads</h1>\r\n            {redditLinks.length > 0 &&\r\n              redditLinks.map((link, index) => (\r\n                <div key={\"redditDiv\" + index}>\r\n                  {isMobileOnly ? (\r\n                    <a href={link} key={\"redditLink\" + index} target=\"blank\">\r\n                      {link.substring(0, 33) + \". . .\"}\r\n                    </a>\r\n                  ) : (\r\n                    <a href={link} key={\"redditLink\" + index} target=\"blank\">\r\n                      {link}\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ReviewPage;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { myFirebase } from \"../firebase/firebase\";\r\nimport { logoutUser } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport SignupPage from \"./SignupPage\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nconst NavBar = ({\r\n  isLoggingOut,\r\n  logoutError,\r\n  dispatch,\r\n  backgroundColor,\r\n  fromLandingPage,\r\n  title,\r\n}) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [loginPopup, setLoginPopup] = useState(false);\r\n  const [signupPopup, setSignupPopup] = useState(false);\r\n  const [backToLanding, setBackToLanding] = useState(false);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = myFirebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  });\r\n\r\n  if (backToLanding && !fromLandingPage) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <Grid container style={{ backgroundColor: backgroundColor }}>\r\n      <div>\r\n        <img\r\n          src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n          height={fromLandingPage ? \"80\" : \"50\"}\r\n          id=\"wyr_logo\"\r\n          style={{\r\n            marginLeft: \"5px\",\r\n            marginTop: \"5px\",\r\n            marginBottom: \"5px\",\r\n          }}\r\n          alt=\"\"\r\n          onClick={() => setBackToLanding(true)}\r\n          onMouseEnter={() => setHover(true)}\r\n          onMouseLeave={() => setHover(false)}\r\n        />\r\n        {hover && !fromLandingPage && (\r\n          <label htmlFor=\"wyr_logo\">back to home page</label>\r\n        )}\r\n      </div>\r\n      {title && (\r\n        <div style={{ marginLeft: \"auto\" }}>\r\n          <h1\r\n            style={\r\n              isMobileOnly\r\n                ? {\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"0px\",\r\n                  }\r\n                : {\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"0px\",\r\n                    marginLeft: isLoggedIn ? \"16%\" : \"45%\",\r\n                  }\r\n            }\r\n          >\r\n            {title}\r\n          </h1>\r\n        </div>\r\n      )}\r\n      {isLoggedIn && (\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          style={{\r\n            borderRadius: 25,\r\n            marginLeft: \"auto\",\r\n            marginTop: \"auto\",\r\n            marginBottom: \"auto\",\r\n            marginRight: \"1vw\",\r\n            maxHeight: \"30px\",\r\n          }}\r\n          onClick={handleLogout}\r\n        >\r\n          Log out\r\n        </Button>\r\n      )}\r\n\r\n      {!isLoggedIn && (\r\n        <div\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            marginTop: \"auto\",\r\n            marginBottom: \"auto\",\r\n            marginRight: \"1vw\",\r\n          }}\r\n        >\r\n          <Button\r\n            disableElevation\r\n            size=\"large\"\r\n            style={{ borderRadius: 25, color: \"white\" }}\r\n            onClick={() => setLoginPopup(true)}\r\n          >\r\n            Login\r\n          </Button>\r\n          <LoginPage\r\n            trigger={loginPopup}\r\n            closed={() => {\r\n              setLoginPopup(false);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            style={{ borderRadius: 25, marginLeft: \"10px\", maxHeight: \"30px\" }}\r\n            onClick={() => setSignupPopup(true)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <SignupPage\r\n            trigger={signupPopup}\r\n            closed={() => {\r\n              setSignupPopup(false);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {isLoggingOut && <p>Logging Out....</p>}\r\n      {logoutError && <p>Error logging out</p>}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggingOut: state.auth.isLoggingOut,\r\n    logoutError: state.auth.logoutError,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","class IdleTimer {\r\n    constructor({timeout, onTimeout, onExpired}){\r\n        this.timeout = timeout;\r\n        this.onTimeout = onTimeout;\r\n\r\n            const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n            // console.log(\"current time is \" + Date.now());\r\n            // console.log(\"expire time is \" + expiredTime);\r\n            if(expiredTime > 0 && expiredTime < Date.now()){\r\n                //alert(\"expired\")\r\n                onExpired();\r\n                return;\r\n            }\r\n\r\n\r\n        //bind will keep the eventhandler function to current context\r\n        this.eventhandler = this.updateExpiredTime.bind(this);\r\n        this.tracker();\r\n        this.startInterval();\r\n    }\r\n\r\n\r\n    //initialize timer and check timeout every 1 second, onTimeout is the callback function to be executed after timeout\r\n    startInterval()\r\n    {\r\n        this.updateExpiredTime();\r\n\r\n        this.interval = setInterval(() => {\r\n            const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n            //console.log(expiredTime);\r\n            if(expiredTime < Date.now())\r\n            {\r\n                if(this.onTimeout)\r\n                {\r\n                    this.onTimeout();\r\n                    //this.cleanUp();\r\n                }\r\n            }\r\n    },1000);\r\n}\r\n\r\n    //update timeout time in the local storage whenever user has any movement, keep an additional timeoutTracker so only store expire time after user stops interaction for 300ms\r\n    updateExpiredTime()\r\n    {\r\n        if(this.timeoutTracker){\r\n            clearTimeout(this.timeoutTracker);\r\n        }\r\n        this.timeoutTracker = setTimeout(() => {\r\n            localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n            //console.log(\"setting timer...\");\r\n        },0);\r\n       \r\n    }\r\n\r\n    //track user interactions including mousemove, scroll, keystroke and click\r\n    tracker()\r\n    {\r\n        window.addEventListener(\"mousemove\", this.eventhandler);\r\n        window.addEventListener(\"scroll\", this.eventhandler);\r\n        window.addEventListener(\"keydown\", this.eventhandler);\r\n        window.addEventListener(\"click\", this.eventhandler);\r\n    }\r\n\r\n    cleanUp() {\r\n        //console.log(\"expire time before cleanup is\" + parseInt(localStorage.getItem(\"_expiredTime\"), 10));\r\n        localStorage.removeItem(\"_expiredTime\");\r\n        //console.log(\"expire time after cleanup is\" + parseInt(localStorage.getItem(\"_expiredTime\"), 10));\r\n        clearInterval(this.interval);\r\n        window.removeEventListener(\"mousemove\", this.eventhandler);\r\n        window.removeEventListener(\"scroll\", this.eventhandler);\r\n        window.removeEventListener(\"keydown\", this.eventhandler);\r\n        window.removeEventListener(\"click\", this.eventhandler);\r\n    }\r\n}\r\nexport default IdleTimer;","import {\r\n  Card,\r\n  Grid,\r\n  GridList,\r\n  GridListTile,\r\n  InputBase,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport { logoutUser } from \"../actions\";\r\nimport AddReview from \"./AddReview\";\r\nimport ReviewPage from \"./ReviewPage\";\r\nimport NavBar from \"./NavBar\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport IdleTimer from \"../actions/IdleTimer\";\r\n\r\n// CSS styling\r\nconst styles = () => ({\r\n  searchBar: {\r\n    backgroundColor: \"#bdf4ff\",\r\n    opacity: 0.5,\r\n    borderRadius: 25,\r\n    padding: \"10px\",\r\n  },\r\n  courseCard: {\r\n    backgroundColor: \"#FF7F50\",\r\n    borderRadius: 25,\r\n    padding: \"15px\",\r\n    height: \"100px\",\r\n  },\r\n  gridList: {\r\n    width: \"90vw\",\r\n    height: \"auto\",\r\n    padding: \"15px\",\r\n  },\r\n  addCourseButton: {\r\n    width: isMobileOnly ? \"75vw\" : \"20vw\",\r\n    height: \"3rem\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#FF7F50\",\r\n    marginBottom: \"25px\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nconst CoursesPage = (props) => {\r\n  const [courseList, setCourseList] = useState([]); // list of courses\r\n  const [selectedCourse, setSelectedCourse] = useState({}); // course to pass to ReviewPage\r\n  const [goToReviewPage, setGoToReviewPage] = useState(false); // mounts ReviewPage when true\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // value of input to search bar\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [isTimeout, setIsTimeout] = useState(false);\r\n  const { classes, isLoggingOut, logoutError, dispatch } = props;\r\n\r\n  // handles when a course is clicked on\r\n  const onCourseClick = (e) => {\r\n    const text = e.target.innerText;\r\n    for (let i = 0; i < courseList.length; i++) {\r\n      let course = courseList[i];\r\n      if (text.includes(course.name) || text.includes(course.code)) {\r\n        setSelectedCourse(course);\r\n        setGoToReviewPage(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Timer for timeout, timeout counter set to 900s (15min now)\r\n    const timer = new IdleTimer({\r\n      timeout: 900,\r\n      onTimeout: () => {\r\n        //console.log(\"In onTimeout\")\r\n        setIsTimeout(true);\r\n      },\r\n      onExpired: () => {\r\n        setIsTimeout(true);\r\n      },\r\n    });\r\n\r\n    if (isTimeout) {\r\n      dispatch(logoutUser());\r\n    }\r\n\r\n    // receives course data from Firebase and updates courseList and courseIDs in state\r\n    const unsubscribe = db.collection(\"courses\").onSnapshot((querySnapshot) => {\r\n      const courses = [];\r\n      querySnapshot.forEach((doc) => {\r\n        courses.push(doc.data());\r\n      });\r\n      setCourseList(courses);\r\n    });\r\n\r\n    return () => {\r\n      //dispatch(logoutUser());\r\n      unsubscribe();\r\n      //console.log(\"cleaning up...\")\r\n      timer.cleanUp();\r\n    };\r\n  }, [dispatch, isTimeout]);\r\n\r\n  if (goToReviewPage) {\r\n    return <ReviewPage selectedCourse={selectedCourse} />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          dispatch={dispatch}\r\n          backgroundColor={\"#69b4cf\"}\r\n          title={\"Courses\"}\r\n        />\r\n        <br />\r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <div className={classes.searchBar}>\r\n            <InputBase\r\n              placeholder=\"Course Name or Code...\"\r\n              onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n              }}\r\n              style={isMobileOnly ? { width: \"70vw\" } : { width: \"40vw\" }}\r\n            />\r\n            <Search style={{ color: \"#fb9263\" }} />\r\n          </div>\r\n\r\n          <GridList\r\n            className={classes.gridList}\r\n            // if user is on mobile then gridList has 1 column, otherwise it has 3 columns\r\n            cols={isMobileOnly ? 1 : 3}\r\n          >\r\n            {\r\n              // iterates through list of courses, creates Card/gridListTile, and adds it to gridList\r\n              // filters based on search term\r\n              courseList\r\n                .filter((course) => {\r\n                  if (searchTerm === \"\") {\r\n                    return course;\r\n                  } else if (\r\n                    course.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return course;\r\n                  } else if (\r\n                    course.code\r\n                      .replaceAll(\":\", \"\")\r\n                      .includes(searchTerm.replaceAll(\":\", \"\"))\r\n                  ) {\r\n                    return course;\r\n                  }\r\n                })\r\n                .map((course) => (\r\n                  <GridListTile\r\n                    key={\"GLT\" + course.code}\r\n                    style={{ height: \"auto\", padding: \"10px\" }}\r\n                  >\r\n                    <Card\r\n                      key={\"card\" + course.code}\r\n                      className={classes.courseCard}\r\n                      onMouseOver={(e) => {\r\n                        e.currentTarget.style.backgroundColor = \"#ffc1ab\";\r\n                      }}\r\n                      onMouseOut={(e) => {\r\n                        e.currentTarget.style.backgroundColor = \"#FF7F50\";\r\n                      }}\r\n                      onClick={onCourseClick}\r\n                    >\r\n                      <Grid\r\n                        key={\"cardGrid\" + course.code}\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                      >\r\n                        <center>\r\n                          <Typography\r\n                            key={course.code}\r\n                            style={{\r\n                              marginBottom: \"10px\",\r\n                              fontFamily: \"sans-serif\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {course.code}\r\n                          </Typography>\r\n                          <Typography\r\n                            key={course.name}\r\n                            style={{\r\n                              fontFamily: \"Poppins\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {course.name}\r\n                          </Typography>\r\n                        </center>\r\n                      </Grid>\r\n                    </Card>\r\n                  </GridListTile>\r\n                ))\r\n            }\r\n          </GridList>\r\n\r\n          <div align=\"center\">\r\n            <h1>Can't Find the Course You're Looking For?</h1>\r\n            <Button\r\n              className={classes.addCourseButton}\r\n              onClick={() => {\r\n                setButtonPopup(true);\r\n              }}\r\n            >\r\n              Add Review for new Course\r\n            </Button>\r\n            <AddReview\r\n              trigger={buttonPopup}\r\n              closed={() => {\r\n                setButtonPopup(false);\r\n              }}\r\n            />\r\n          </div>\r\n        </Grid>\r\n\r\n        {isLoggingOut && <p>Logging Out....</p>}\r\n        {logoutError && <p>Error logging out</p>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggingOut: state.auth.isLoggingOut,\r\n    logoutError: state.auth.logoutError,\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(CoursesPage));\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Typewriter = ({ text }) => {\r\n  const index = useRef(0);\r\n\r\n  const [currentText, setCurrentText] = useState(\"\");\r\n\r\n  //for animation\r\n\r\n  useEffect(() => {\r\n    if (index.current < text.length) {\r\n      let timerId = setTimeout(() => {\r\n        setCurrentText((value) => value + text.charAt(index.current));\r\n        index.current += 1;\r\n      }, 200);\r\n\r\n      return () => {\r\n        clearTimeout(timerId);\r\n      };\r\n    }\r\n  }, [currentText, text]);\r\n\r\n  return <h1>{currentText} </h1>;\r\n};\r\n\r\nexport default Typewriter;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport Typewriter from \"../actions/Typewriter.js\";\r\nimport NavBar from \"./NavBar.js\";\r\nimport SignupPage from \"./SignupPage\";\r\nimport { myFirebase } from \"../firebase/firebase\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"linear-gradient(145deg, #5F9EA0 20%, #ff7f50 70%)\",\r\n    color: \"white\",\r\n    height: isMobileOnly ? \"4250px\" : \"3100px\",\r\n    maxWidth: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n});\r\n\r\nconst LandingPage = () => {\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1500 });\r\n\r\n    const unsubscribe = myFirebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setIsLoggedIn(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [directToCoursesPage, setDirectToCoursesPage] = useState(false);\r\n  const [signupPopup, setSignupPopup] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  if (directToCoursesPage === true) return <Redirect to=\"/courses\" />;\r\n\r\n  return (\r\n    // The top bar with logo and sign up and login\r\n    <div className={classes.root}>\r\n      <NavBar fromLandingPage={true} />\r\n\r\n      {/* Large would you recommend section  */}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"700px\",\r\n        }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <center style={{ fontSize: isMobileOnly ? 25 : 40 }}>\r\n            <Typewriter text={\"Would You Recommend?\"} />\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <center>\r\n            <h1>\r\n              wyr is an informative and intuitive tool to help find, choose, and\r\n              organize your courses.\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            borderRadius: 25,\r\n            backgroundColor: \"#FF7F50\",\r\n            color: \"white\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n            marginTop: \"50px\",\r\n            marginBottom: \"50px\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n          onClick={() => setDirectToCoursesPage(true)}\r\n        >\r\n          check out reviews\r\n        </Button>\r\n        <Grid item xs={12}>\r\n          <center>\r\n            <Typewriter text={\"Real Students, Real Reviews\"} />\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <center>\r\n            <h1>\r\n              wyr makes sure that every review is authentic and not modified in\r\n              any way.\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        {isMobileOnly ? (\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/review_feature.PNG\"}\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            alt=\"\"\r\n          />\r\n        ) : (\r\n          <Grid item xs={5}>\r\n            <img\r\n              data-aos=\"slide-right\"\r\n              src={process.env.PUBLIC_URL + \"/images/review_feature.PNG\"}\r\n              width=\"98%\"\r\n              max-height=\"98%\"\r\n              object-fit=\"contain\"\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n        )}\r\n        {isMobileOnly ? (\r\n          <center>\r\n            <h1 style={{ marginLeft: \"10px\" }}>\r\n              Write reviews based on experience to help other students choose\r\n              their courses.\r\n            </h1>\r\n          </center>\r\n        ) : (\r\n          <Grid item xs={6}>\r\n            <center>\r\n              <h1 style={{ marginLeft: \"10px\" }}>\r\n                Write reviews based on experience to help other students choose\r\n                their courses.\r\n              </h1>\r\n            </center>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        {isMobileOnly && (\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/class_feature.PNG\"}\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            alt=\"\"\r\n          />\r\n        )}\r\n        {isMobileOnly ? (\r\n          <center>\r\n            <h1>\r\n              Get simple overviews for courses with all the info you need,\r\n              without even signing up\r\n            </h1>\r\n          </center>\r\n        ) : (\r\n          <Grid item xs={4}>\r\n            <center>\r\n              <h1>\r\n                Get simple overviews for courses with all the info you need,\r\n                without even signing up\r\n              </h1>\r\n            </center>\r\n          </Grid>\r\n        )}\r\n\r\n        {!isMobileOnly && (\r\n          <Grid item xs={6}>\r\n            <img\r\n              data-aos=\"slide-left\"\r\n              src={process.env.PUBLIC_URL + \"/images/class_feature.PNG\"}\r\n              width=\"98%\"\r\n              max-height=\"98%\"\r\n              object-fit=\"contain\"\r\n              style={{\r\n                marginLeft: \"10%\",\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        {isMobileOnly ? (\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/images/search_feature.PNG\"}\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            alt=\"\"\r\n          />\r\n        ) : (\r\n          <Grid item xs={5}>\r\n            <img\r\n              data-aos=\"slide-right\"\r\n              src={process.env.PUBLIC_URL + \"/images/search_feature.PNG\"}\r\n              width=\"98%\"\r\n              max-height=\"98%\"\r\n              object-fit=\"contain\"\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n        )}\r\n        {isMobileOnly ? (\r\n          <center>\r\n            <h1 style={{ marginLeft: \"10px\" }}>\r\n              Search for topics of interests to find the perfect courses for\r\n              you.\r\n            </h1>\r\n          </center>\r\n        ) : (\r\n          <Grid item xs={6}>\r\n            <center>\r\n              <h1 style={{ marginLeft: \"10px\" }}>\r\n                Search for topics of interests to find the perfect courses for\r\n                you.\r\n              </h1>\r\n              <h1>\r\n                Want to write a review for a course that doesn't appear in the\r\n                list? No problem.\r\n              </h1>\r\n            </center>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            borderRadius: 25,\r\n            backgroundColor: \"#69b4cf\",\r\n            color: \"white\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n            marginTop: \"50px\",\r\n            marginBottom: \"50px\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n          onClick={() => setDirectToCoursesPage(true)}\r\n        >\r\n          check out reviews\r\n        </Button>\r\n        <br />\r\n        <br />\r\n        <Grid item xs={6}>\r\n          <center>\r\n            <h1>\r\n              New features and more data coming soon! We’re currently adding\r\n              SIRS for specific professors - check out your professors on\r\n              <a\r\n                href=\"https://docs.google.com/spreadsheets/d/1NT5k5e4twy-S8Af1J6XHb7024OgSaXm7u4WH7IB1jvw/edit#gid=140412152\"\r\n                target=\"blank\"\r\n                style={{\r\n                  marginLeft: \"1vw\",\r\n                  marginRight: \"1vw\",\r\n                  textDecoration: \"none\",\r\n                  color: \"#69b4cf\",\r\n                }}\r\n              >\r\n                this\r\n              </a>\r\n              database for now!\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <center>\r\n          <h2>\r\n            Have questions or feedback? Contact us at: wyrhelpdesk@gmail.com{\" \"}\r\n          </h2>\r\n        </center>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport ForgotpassPage from \"./components/ForgotpassPage\";\r\nimport CoursesPage from \"./components/CoursesPage\";\r\nimport { connect } from \"react-redux\";\r\nimport LandingPage from \"./components/LandingPage\";\r\n\r\nfunction App(props) {\r\n  const { isAuthenticated, isVerifying } = props;\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route\r\n        exact\r\n        path=\"/courses\"\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n        component={CoursesPage}\r\n      />\r\n      <Route path=\"/forgotpassword\" component={ForgotpassPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isVerifying: state.auth.isVerifying,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n} from \"../actions/\";\r\n\r\nconst reducerAuth = (\r\n  state = {\r\n    isLoggingIn: false,\r\n    isLoggingOut: false,\r\n    isVerifying: false,\r\n    loginError: false,\r\n    logoutError: false,\r\n    isAuthenticated: false,\r\n    user: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        loginError: true,\r\n      };\r\n    case LOGOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n        logoutError: false,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n    case LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        logoutError: true,\r\n      };\r\n    case VERIFY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isVerifying: true,\r\n        verifyingError: false,\r\n      };\r\n    case VERIFY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isVerifying: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({ auth });","import React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport configureStore from \"./configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nfunction Root() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default Root;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport { verifyAuth } from \"./actions/\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(persistedState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(thunkMiddleware)\r\n  );\r\n  store.dispatch(verifyAuth());\r\n  return store;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}