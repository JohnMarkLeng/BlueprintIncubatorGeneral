{"version":3,"sources":["firebase/firebase.js","actions/auth.js","components/LoginPage.js","components/SignupPage.js","components/ForgotpassPage.js","components/AddReview.js","components/Stars.js","components/ReviewPage.js","actions/IdleTimer.js","components/Dashboard.js","components/ProtectedRoute.js","actions/Typewriter.js","components/LandingPage.js","App.js","reducers/auth.js","reducers/index.js","Root.js","configureStore.js","reportWebVitals.js","index.js"],"names":["myFirebase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","receiveLogin","user","type","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged","connect","state","isLoggingIn","loginError","isAuthenticated","useState","setEmail","setPassword","to","Grid","container","spacing","direction","alignItems","justify","backgroundcolor","style","minHeight","backgroundColor","Card","src","height","alt","marginTop","onSubmit","e","preventDefault","FormControl","minWidth","padding","TextField","required","variant","marginBottom","id","label","name","onChange","target","value","FormHelperText","color","alignSelf","Button","SignupPage","props","firstName","setFirstName","lastName","setLastName","username","setUsername","confirmPassword","setConfirmPassword","majorList","setMajorList","minorList","setMinorList","setEmailcheck","setPasswordLengthCheck","passMatch","setPassMatch","setUpperLowerCheck","emailfakecheck","setEmailfakeCheck","passwordStrength","setPasswordstrengthCheck","majorCheck","setMajorCheck","handleSubmit","event","pass","email_postfix","substring","indexOf","length","i","temp1","temp2","charAt","test","localeCompare","validateForm","renderForm","errorCode","createUserWithEmailAndPassword","userCredential","sendEmailVerification","code","errorMessage","alert","signupWithEmailPassword","updateProfile","displayName","console","log","majors","cleanList","minors","collection","doc","uid","set","major","minor","history","push","list","splice","handleAddClickMajor","handleAddClickMinor","map","x","index","handleInputChangeMajor","disableElevation","marginLeft","onClick","handleRemoveClickMajor","handleInputChangeMinor","handleRemoveClickMinor","ForgotpassPage","emailMatch","borderRadius","textAlign","sendPasswordResetEmail","passwordReset","disabled","background","position","top","left","width","display","justifyContent","zIndex","innerBlock","maxWidth","flexDirection","AddReview","trigger","closed","fromCourse","diffRating","setDiffRating","workloadRating","setWorkloadRating","profRating","setProfRating","diffHover","setDiffHover","workloadHover","setWorkloadHover","profHover","setProfHover","newCourse","setNewCourse","newCourseCode","setNewCourseCode","prof","setProf","description","setDescription","clearFields","undefined","add","overallRating","currentUser","Typography","Array","star","ratingValue","Star","fontSize","cursor","onMouseEnter","onMouseLeave","StarOutline","multiline","rows","marginRight","Stars","rating","stars","Math","floor","StarHalf","ceil","withStyles","summaryCard","addReviewButton","isMobileOnly","returnToDashboard","setReturnToDashboard","reviewList","setReviewList","avgRating","setAvgRating","buttonPopup","setButtonPopup","selectedCourse","classes","useEffect","onSnapshot","querySnapshot","reviews","sum","forEach","data","IconButton","ArrowBackIos","className","round","toFixed","align","item","xs","review","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMore","aria-controls","AccordionDetails","IdleTimer","timeout","onTimeout","onExpired","this","expiredTime","parseInt","localStorage","getItem","Date","now","eventhandler","updateExpiredTime","bind","tracker","startInterval","interval","setInterval","timeoutTracker","clearTimeout","setTimeout","setItem","window","addEventListener","removeItem","clearInterval","removeEventListener","outline","searchBar","opacity","courseCard","gridList","isLoggingOut","logoutError","anchorEl","setAnchorEl","courseList","setCourseList","setSelectedCourse","goToReviewPage","setGoToReviewPage","searchTerm","setSearchTerm","isTimeout","setIsTimeout","emailSent","sendEmail","onCourseClick","text","innerText","course","includes","timer","unsubscribe","courses","cleanUp","emailVerified","currentTarget","Avatar","Menu","onClose","open","Boolean","MenuItem","InputBase","placeholder","Search","GridList","cols","filter","toLowerCase","replaceAll","GridListTile","location","reload","ProtectedRoute","Component","component","isVerifying","rest","render","pathname","from","Typewriter","useRef","currentText","setCurrentText","current","useStyles","makeStyles","root","overflowX","LandingPage","Aos","init","duration","directToLogin","setDirectToLogin","directToSignup","setDirectToSignup","handleLoginClick","handleSignupClick","size","maxHeight","fontWeight","data-aos","max-height","object-fit","exact","path","Dashboard","LoginPage","reducerAuth","action","verifyingError","combineReducers","store","persistedState","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9208618c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAcf_D0EltZ5YRx81oWz8kL-j-cMFtQP9I\",\r\n    authDomain: \"blueprintloginpage.firebaseapp.com\",\r\n    projectId: \"blueprintloginpage\",\r\n    storageBucket: \"blueprintloginpage.appspot.com\",\r\n    messagingSenderId: \"908170588527\",\r\n    appId: \"1:908170588527:web:bf100155f1a8b4eb87b89a\",\r\n    measurementId: \"G-GPWLQGTPWE\"\r\n}\r\n\r\nexport const myFirebase = firebase.initializeApp(firebaseConfig);\r\nconst baseDb = myFirebase.firestore();\r\nexport const db = baseDb;","import { Redirect } from \"react-router\";\r\nimport { myFirebase } from \"../firebase/firebase\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE,\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST,\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const loginUser = (email, password) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n  myFirebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      dispatch(receiveLogin(user));\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  myFirebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      dispatch(receiveLogout());\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(logoutError());\r\n    });\r\n};\r\n\r\nexport const verifyAuth = () => (dispatch) => {\r\n  dispatch(verifyRequest());\r\n  myFirebase.auth().onAuthStateChanged((user) => {\r\n    if (user !== null) {\r\n      dispatch(receiveLogin(user));\r\n    }\r\n    dispatch(verifySuccess());\r\n  });\r\n};\r\n\r\nexport const signupWithEmailPassword = (email, password) => {\r\n  // dispatch(requestLogin());\r\n  //var user;\r\n  myFirebase\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      var user = userCredential.user;\r\n      user.sendEmailVerification();\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      var errorCode = error.code;\r\n      var errorMessage = error.errorMessage;\r\n      if (errorCode === \"auth/email-already-in-use\") {\r\n        alert(\"Email Address is already in use\");\r\n        return <Redirect to=\"/login\" />;\r\n      } else if (errorCode === \"auth/invalid-email\") {\r\n        return errorCode;\r\n      } else if (errorCode === \"auth/weak-password\") {\r\n        return errorCode;\r\n      }\r\n    });\r\n};\r\n\r\nexport const passwordReset = (email) => {\r\n  myFirebase\r\n    .auth()\r\n    .sendPasswordResetEmail(email)\r\n    .then(() => {\r\n      alert(\"Please check your email!\");\r\n    });\r\n};\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormHelperText,\r\n  FormControl,\r\n  Card,\r\n} from \"@material-ui/core\";\r\n\r\nconst Login = ({ dispatch, loginError, isAuthenticated }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleEmailChange = ({ target }) => {\r\n    setEmail(target.value);\r\n  };\r\n\r\n  const handlePasswordChange = ({ target }) => {\r\n    setPassword(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(email, password));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        backgroundcolor=\"teal\"\r\n        style={{ minHeight: \"100vh\", backgroundColor: \"teal\" }}\r\n      >\r\n        <Card>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <img\r\n              src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n              height=\"80\"\r\n              alt=\"\"\r\n              style={{ marginTop: \"15px\" }}\r\n            />\r\n            <h1>Log In</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl style={{ minWidth: \"25vw\", padding: \"15px\" }}>\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  onChange={handleEmailChange}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  onChange={handlePasswordChange}\r\n                />\r\n                {loginError && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Incorrect email or password.\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  style={{ backgroundColor: \"orange\" }}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </FormControl>\r\n            </form>\r\n            <Link to=\"/forgotpassword\">Forgot password?</Link>\r\n            <footer style={{ marginTop: \"7px\", marginBottom: \"15px\" }}>\r\n              Not a member? <Link to=\"/signup\">Sign up</Link>\r\n            </footer>\r\n          </Grid>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggingIn: state.auth.isLoggingIn,\r\n    loginError: state.auth.loginError,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  FormHelperText,\r\n  FormControl,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport { signupWithEmailPassword } from \"../actions/auth\";\r\nimport { db, myFirebase } from \"../firebase/firebase\";\r\n\r\nconst SignupPage = (props) => {\r\n  //const email_postfix1 = '@scarletmail.rutgers.edu';\r\n  const email_postfix2 = \"@rutgers.edu\";\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [majorList, setMajorList] = useState([\"\"]);\r\n  const [minorList, setMinorList] = useState([\"\"]);\r\n\r\n  const [emailcheck, setEmailcheck] = useState(true);\r\n  const [password_length_check, setPasswordLengthCheck] = useState(true);\r\n  const [passMatch, setPassMatch] = useState(true);\r\n  const [upperlower, setUpperLowerCheck] = useState(true);\r\n  const [emailfakecheck, setEmailfakeCheck] = useState(true);\r\n  const [passwordStrength, setPasswordstrengthCheck] = useState(true);\r\n  const [majorCheck, setMajorCheck] = useState(true);\r\n\r\n  function validateForm() {\r\n    var pass = true;\r\n\r\n    //validate email address: must be rutgers email\r\n    let email_postfix = email.substring(email.indexOf(\"@\"), email.length);\r\n    if (email.length > 0 && email_postfix === email_postfix2) {\r\n      setEmailcheck(true);\r\n      pass = pass && true;\r\n    } else {\r\n      setEmailcheck(false);\r\n      pass = pass && false;\r\n    }\r\n\r\n    // validate password:\r\n    // must be at least seven digits and include at least one uppercase and one lowercase character\r\n    if (password.length > 0 && password.length <= 6) {\r\n      setPasswordLengthCheck(false);\r\n      pass = pass && false;\r\n    } else {\r\n      setPasswordLengthCheck(true);\r\n      pass = pass && true;\r\n      var i = 0;\r\n      var temp1 = false;\r\n      var temp2 = false;\r\n      while (i <= password.length) {\r\n        if (password.charAt(i) === \"\") {\r\n          i++;\r\n          continue;\r\n        } else if (/^[a-z]*$/.test(password.charAt(i))) {\r\n          temp2 = true;\r\n        } else if (/^[A-Z]*$/.test(password.charAt(i))) {\r\n          temp1 = true;\r\n        }\r\n        i++;\r\n      }\r\n      if (temp1 && temp2) {\r\n        setUpperLowerCheck(true);\r\n        pass = pass && true;\r\n      } else {\r\n        setUpperLowerCheck(false);\r\n        pass = pass && false;\r\n      }\r\n    }\r\n\r\n    //validate password match\r\n    if (\r\n      confirmPassword.length > 6 &&\r\n      password.localeCompare(confirmPassword) === 0\r\n    ) {\r\n      setPassMatch(true);\r\n      pass = pass && true;\r\n    } else {\r\n      setPassMatch(false);\r\n      pass = pass && false;\r\n    }\r\n\r\n    //console.log(majorList[0]);\r\n    if (majorList[0] !== \"\") {\r\n      setMajorCheck(true);\r\n      pass = pass && true;\r\n    } else {\r\n      setMajorCheck(false);\r\n      pass = pass && false;\r\n    }\r\n    return pass;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    var isValid = validateForm();\r\n    if (isValid) {\r\n      var errorCode = signupWithEmailPassword(email, password);\r\n      if (errorCode === \"auth/invalid-email\") {\r\n        setEmailfakeCheck(false);\r\n        return renderForm();\r\n      } else if (errorCode === \"auth/weak-password\") {\r\n        setPasswordstrengthCheck(false);\r\n        return renderForm();\r\n      } else {\r\n        //console.log(\"arrive\");\r\n        addUser();\r\n        props.history.push(\"/dashboard\");\r\n      }\r\n    } else {\r\n      return renderForm();\r\n    }\r\n  }\r\n  function cleanList(list) {\r\n    let majors = list;\r\n    for (var i = 0; i < majors.length; i++) {\r\n      if (majors[i] === \"\") {\r\n        majors.splice(i, 1);\r\n      }\r\n    }\r\n    return majors;\r\n  }\r\n  function addUser() {\r\n    // gets current user\r\n    myFirebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // updates display name in Firebase user profile (can be accessed same way as user's uid)\r\n        user\r\n          .updateProfile({\r\n            displayName: username,\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error updating profile: \" + error);\r\n          });\r\n\r\n        // adds additional user info to Firestore \"users\" collection (info that's not a property of Firebase user profile)\r\n        let majors = cleanList(majorList);\r\n        let minors = cleanList(minorList);\r\n        db.collection(\"users\")\r\n          .doc(user.uid)\r\n          .set({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            // TODO: set rest of user info\r\n            major: majors,\r\n            minor: minors,\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding document: \", error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleInputChangeMajor = (e, index) => {\r\n    const name = e.target.value;\r\n    const list = [...majorList];\r\n    list[index] = name;\r\n    setMajorList(list);\r\n  };\r\n  const handleRemoveClickMajor = (index) => {\r\n    const list = [...majorList];\r\n    list.splice(index, 1);\r\n    setMajorList(list);\r\n  };\r\n\r\n  const handleAddClickMajor = () => {\r\n    setMajorList([...majorList, \"\"]);\r\n  };\r\n\r\n  const handleInputChangeMinor = (e, index) => {\r\n    const name = e.target.value;\r\n    const list = [...minorList];\r\n    list[index] = name;\r\n    setMinorList(list);\r\n  };\r\n  const handleRemoveClickMinor = (index) => {\r\n    const list = [...minorList];\r\n    list.splice(index, 1);\r\n    setMinorList(list);\r\n  };\r\n\r\n  const handleAddClickMinor = () => {\r\n    setMinorList([...minorList, \"\"]);\r\n  };\r\n\r\n  function renderForm() {\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: \"100vh\", backgroundColor: \"#E67E22 \" }}\r\n      >\r\n        <Card>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl style={{ minWidth: \"25vw\", padding: \"15px\" }}>\r\n                {\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    * Password must be longer than six digits and\r\n                    <br />\r\n                    include at least one uppercase and one lower case letter\r\n                    <br />\r\n                    * Please use your rutgers email ending with @rutgers.edu\r\n                    <br />\r\n                  </FormHelperText>\r\n                }\r\n                <TextField\r\n                  required\r\n                  label=\"First Name\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  label=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {!emailfakecheck && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Email address is invalid\r\n                  </FormHelperText>\r\n                )}\r\n                {majorList.map((x, i) => {\r\n                  return (\r\n                    <div key={\"majorListDiv\" + i}>\r\n                      <TextField\r\n                        label=\"Major\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                          marginBottom: \"7px\",\r\n                          backgroundColor: \"#D6EAF8 \",\r\n                        }}\r\n                        value={x}\r\n                        onChange={(e) => handleInputChangeMajor(e, i)}\r\n                      />\r\n                      {majorList.length !== 1 && (\r\n                        <Button\r\n                          //className=\"mr10\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={() => handleRemoveClickMajor(i)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      )}\r\n                      {majorList.length - 1 === i && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={handleAddClickMajor}\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                      {!majorCheck && i === 0 && (\r\n                        <FormHelperText\r\n                          style={{\r\n                            color: \"red\",\r\n                            marginBottom: \"7px\",\r\n                            alignSelf: \"center\",\r\n                          }}\r\n                        >\r\n                          Enter at least one major\r\n                        </FormHelperText>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                {minorList.map((x, i) => {\r\n                  return (\r\n                    <div key={\"minorListDiv\" + i}>\r\n                      <TextField\r\n                        label=\"Minor (if applicable)\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                          marginBottom: \"7px\",\r\n                          backgroundColor: \"#D6EAF8 \",\r\n                        }}\r\n                        value={x}\r\n                        onChange={(e) => handleInputChangeMinor(e, i)}\r\n                      />\r\n                      {minorList.length !== 1 && (\r\n                        <Button\r\n                          //className=\"mr10\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={() => handleRemoveClickMinor(i)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      )}\r\n                      {minorList.length - 1 === i && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          style={{ marginLeft: \"10px\", marginTop: \"10px\" }}\r\n                          onClick={handleAddClickMinor}\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n                <TextField\r\n                  required\r\n                  label=\"Username\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8\" }}\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {!passwordStrength && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Try to use a stronger password\r\n                  </FormHelperText>\r\n                )}\r\n                <TextField\r\n                  required\r\n                  type=\"password\"\r\n                  label=\"Re-enter Password\"\r\n                  variant=\"outlined\"\r\n                  style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                {!passMatch && (\r\n                  <FormHelperText\r\n                    style={{\r\n                      color: \"red\",\r\n                      marginBottom: \"7px\",\r\n                      alignSelf: \"center\",\r\n                    }}\r\n                  >\r\n                    Passwords Do Not Match\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ backgroundColor: \"orange\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </FormControl>\r\n            </form>\r\n            <div style={{ marginBottom: \"15px\" }}>\r\n              Already a member? <Link to=\"/login\">Log in</Link>\r\n            </div>\r\n          </Grid>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return renderForm();\r\n};\r\n\r\nexport default SignupPage;\r\n","import { useState } from \"react\";\nimport { Grid, TextField, Button, FormControl } from \"@material-ui/core\";\nimport { passwordReset } from \"../actions\";\n\nconst ForgotpassPage = (props) => {\n  const [email, setEmail] = useState(\"\");\n  let emailMatch = false;\n  let buttonDisabled = false;\n\n  if (setEmail === email && email.length > 0) emailMatch = true;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    passwordReset(email);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\", backgroundColor: \"teal\" }}\n    >\n      <div style={{ backgroundColor: \"white\", borderRadius: \"5px\" }}>\n        <h1 style={{ textAlign: \"center\" }}>Forgot Password</h1>\n        <form onSubmit={onSubmit}>\n          {!emailMatch && (\n            <h4\n              style={{ color: \"black\", marginBottom: \"7px\", marginLeft: \"7px\" }}\n            >\n              Enter your email\n            </h4>\n          )}\n          <FormControl\n            style={{ minWidth: \"25vw\", padding: \"25px\", borderRadius: \"25px\" }}\n          >\n            <TextField\n              required\n              label=\"Email\"\n              id=\"email_field\"\n              variant=\"outlined\"\n              style={{ marginBottom: \"7px\", backgroundColor: \"#D6EAF8 \" }}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Button\n              id=\"#btn-forgotPass\"\n              variant=\"contained\"\n              type=\"submit\"\n              style={{ marginBottom: \"7px\", backgroundColor: \"orange\" }}\n              disabled={buttonDisabled}\n            >\n              Send email\n            </Button>\n          </FormControl>\n        </form>\n      </div>\n    </Grid>\n  );\n};\n\nexport default ForgotpassPage;\n","import { Grid, Card, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport { Star, StarOutline } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { db, myFirebase } from \"../firebase/firebase\";\r\n\r\n// CSS\r\nconst background = {\r\n  position: \"fixed\",\r\n  top: \"0\",\r\n  left: \"0\",\r\n  width: \"100%\",\r\n  height: \"100vh\",\r\n  backgroundColor: \"rgba(52, 52, 52, 0.4)\",\r\n\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  zIndex: 4,\r\n};\r\nconst innerBlock = {\r\n  position: \"relative\",\r\n  padding: \"32px\",\r\n  width: \" 70%\",\r\n  maxWidth: \"800px\",\r\n  backgroundColor: \"#FFF\",\r\n  zIndex: 5,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst AddReview = (props) => {\r\n  const { trigger, closed, fromCourse } = props;\r\n  const [diffRating, setDiffRating] = useState(null);\r\n  const [workloadRating, setWorkloadRating] = useState(null);\r\n  const [profRating, setProfRating] = useState(null);\r\n  const [diffHover, setDiffHover] = useState(null);\r\n  const [workloadHover, setWorkloadHover] = useState(null);\r\n  const [profHover, setProfHover] = useState(null);\r\n  const [newCourse, setNewCourse] = useState(\"\");\r\n  const [newCourseCode, setNewCourseCode] = useState(\"\");\r\n  const [prof, setProf] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (diffRating === null || workloadRating === null || profRating === null) {\r\n      alert(\"Fill out all fields and star ratings!\");\r\n    }\r\n    // if AddReview clicked on from ReviewPage, adds review to \"reviews\" subcollection for course\r\n    else if (fromCourse !== undefined) {\r\n      db.collection(\"courses/\" + fromCourse.code + \"/reviews\")\r\n        .add({\r\n          diffRating: diffRating,\r\n          workloadRating: workloadRating,\r\n          profRating: profRating,\r\n          overallRating: (diffRating + workloadRating + profRating) / 3,\r\n          prof: prof,\r\n          description: description,\r\n          user: myFirebase.auth().currentUser.displayName,\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n      clearFields();\r\n    }\r\n    // else, creates new course in \"courses\" then adds review to \"reviews\" subcollection\r\n    else {\r\n      db.collection(\"courses\")\r\n        .doc(newCourseCode)\r\n        .set({\r\n          name: newCourse,\r\n          code: newCourseCode,\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n      db.collection(\"courses\")\r\n        .doc(newCourseCode)\r\n        .collection(\"reviews\")\r\n        .add({\r\n          diffRating: diffRating,\r\n          workloadRating: workloadRating,\r\n          profRating: profRating,\r\n          overallRating: (diffRating + workloadRating + profRating) / 3,\r\n          prof: prof,\r\n          description: description,\r\n          user: myFirebase.auth().currentUser.displayName,\r\n        });\r\n\r\n      clearFields();\r\n    }\r\n  };\r\n\r\n  function clearFields() {\r\n    setDiffRating(null);\r\n    setWorkloadRating(null);\r\n    setProfRating(null);\r\n    setNewCourse(\"\");\r\n    setNewCourseCode(\"\");\r\n    setProf(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  return (\r\n    trigger && (\r\n      <div style={background}>\r\n        <Card style={innerBlock}>\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <Typography>\r\n                Workload (1 is the MOST work, 5 is the LEAST work): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"workloadLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"workloadRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setWorkloadRating(ratingValue)}\r\n                    />\r\n\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (workloadHover || workloadRating) ? (\r\n                        <Star\r\n                          key={\"workloadStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setWorkloadHover(ratingValue)}\r\n                          onMouseLeave={() => setWorkloadHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"workloadStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setWorkloadHover(ratingValue)}\r\n                          onMouseLeave={() => setWorkloadHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Typography>\r\n                Difficulty of Content (1 is the HARDEST, 5 is the EASIEST): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"diffLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"diffRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setDiffRating(ratingValue)}\r\n                    />\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (diffHover || diffRating) ? (\r\n                        <Star\r\n                          key={\"diffStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setDiffHover(ratingValue)}\r\n                          onMouseLeave={() => setDiffHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"diffStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setDiffHover(ratingValue)}\r\n                          onMouseLeave={() => setDiffHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Typography>\r\n                Professor (1 is the WORST, 5 is the BEST): *\r\n              </Typography>\r\n              {[...Array(5)].map((star, i) => {\r\n                const ratingValue = i + 1;\r\n                return (\r\n                  <label key={\"profRatingLabel\" + i}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      key={\"profRating\" + i}\r\n                      style={{ display: \"none\" }}\r\n                      value={ratingValue}\r\n                      onClick={() => setProfRating(ratingValue)}\r\n                    />\r\n\r\n                    {\r\n                      // Colors for Star\r\n                      ratingValue <= (profHover || profRating) ? (\r\n                        <Star\r\n                          key={\"profStar\" + i}\r\n                          style={{\r\n                            fontSize: 34,\r\n                            cursor: \"pointer\",\r\n                            color: \"#fb9263\",\r\n                          }}\r\n                          onMouseEnter={() => setProfHover(ratingValue)}\r\n                          onMouseLeave={() => setProfHover(null)}\r\n                        />\r\n                      ) : (\r\n                        <StarOutline\r\n                          key={\"profStarOutline\" + i}\r\n                          style={{ fontSize: 34, cursor: \"pointer\" }}\r\n                          onMouseEnter={() => setProfHover(ratingValue)}\r\n                          onMouseLeave={() => setProfHover(null)}\r\n                        />\r\n                      )\r\n                    }\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <TextField\r\n              id=\"courseName\"\r\n              required\r\n              style={{ width: \"60%\", marginBottom: \"10px\", marginTop: \"5px\" }}\r\n              label=\"Course:\"\r\n              value={fromCourse !== undefined ? fromCourse.name : newCourse}\r\n              onChange={(e) => setNewCourse(e.target.value)}\r\n            />\r\n            <TextField\r\n              id=\"courseCode\"\r\n              required\r\n              style={{ width: \"60%\", marginBottom: \"10px\", marginTop: \"5px\" }}\r\n              label=\"Code:\"\r\n              value={fromCourse !== undefined ? fromCourse.code : newCourseCode}\r\n              onChange={(e) => setNewCourseCode(e.target.value)}\r\n            />\r\n            <TextField\r\n              id=\"prof\"\r\n              required\r\n              style={{ width: \"60%\", marginBottom: \"10px\", marginTop: \"5px\" }}\r\n              label=\"Professor:\"\r\n              value={prof}\r\n              onChange={(e) => setProf(e.target.value)}\r\n            />\r\n            <TextField\r\n              id=\"description\"\r\n              required\r\n              style={{ width: \"80%\", marginBottom: \"20px\" }}\r\n              label=\"Enter Your Review:\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              multiline\r\n              rows={5}\r\n            />\r\n\r\n            <Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                disableElevation\r\n                style={{ marginRight: \"20px\", backgroundColor: \"#fb9263\" }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={closed}\r\n                variant=\"contained\"\r\n                disableElevation\r\n                style={{ marginLeft: \"20px\", backgroundColor: \"#fb9263\" }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AddReview;\r\n","import { Star, StarOutline, StarHalf } from \"@material-ui/icons\";\r\n\r\nconst Stars = ({ rating, user }) => {\r\n  const stars = [];\r\n\r\n  // adds rating(rounded down to nearest whole number) filled stars to stars array\r\n  for (let i = 1; i <= Math.floor(rating); i++) {\r\n    stars.push(\r\n      <Star\r\n        key={user + \"star\" + i}\r\n        style={{ color: \"white\", marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // adds half star to stars array if rating decimal >= 0.25\r\n  if (rating - Math.floor(rating) >= 0.25) {\r\n    stars.push(\r\n      <StarHalf\r\n        key={user + \"halfStar\"}\r\n        style={{ color: \"white\", marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // adds outlined star to stars array if rating decimal < 0.25\r\n  if (rating - Math.floor(rating) > 0 && rating - Math.floor(rating) < 0.25) {\r\n    stars.push(\r\n      <StarOutline key={user + \"outlinedStar\"} style={{ marginRight: \"5px\" }} />\r\n    );\r\n  }\r\n\r\n  // adds 5 - (rating rounded up to nearest whole number) outlined stars to stars array\r\n  for (let i = 1; i <= 5 - Math.ceil(rating); i++) {\r\n    stars.push(\r\n      <StarOutline\r\n        key={user + \"outlinedStar\" + i}\r\n        style={{ marginRight: \"5px\" }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div>{stars}</div>;\r\n};\r\n\r\nexport default Stars;\r\n","import { useState, useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { ArrowBackIos, ExpandMore } from \"@material-ui/icons\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddReview from \"./AddReview\";\r\nimport Stars from \"./Stars\";\r\n\r\n// const useStyles2 = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: \"flex\",\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     textAlign: \"center\",\r\n//     color: theme.palette.text.secondary,\r\n//     backgroundColor: \"#4198b5\",\r\n//     height: \"flex\",\r\n//   },\r\n// }));\r\n\r\n// CSS styling\r\nconst styles = () => ({\r\n  summaryCard: {\r\n    backgroundColor: \"#fb9263\",\r\n    width: \"65vw\",\r\n    padding: \"25px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderRadius: 25,\r\n  },\r\n  addReviewButton: {\r\n    width: isMobileOnly ? \"80vw\" : \"40vw\",\r\n    height: \"2rem\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#bdf4ff\",\r\n    marginTop: \"25px\",\r\n  },\r\n});\r\n\r\nconst ReviewPage = (props) => {\r\n  const [returnToDashboard, setReturnToDashboard] = useState(false); // when true, returns Dashboard component\r\n  const [reviewList, setReviewList] = useState([]); // list of reviews\r\n  const [avgRating, setAvgRating] = useState(0); // avgRating of all reviews for course\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const { selectedCourse, classes } = props;\r\n\r\n  const popUpAddReview = () => {\r\n    setButtonPopup(true);\r\n  };\r\n\r\n  const closePopUp = () => {\r\n    setButtonPopup(false);\r\n  };\r\n\r\n  // handles when back button is clicked\r\n  const handleReturnToDashboard = () => {\r\n    setReturnToDashboard(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // receives review data from Firebase and updates reviewList and avgRating in state\r\n    db.collection(\"courses/\" + selectedCourse.code + \"/reviews\").onSnapshot(\r\n      (querySnapshot) => {\r\n        const reviews = [];\r\n        let sum = 0;\r\n        querySnapshot.forEach((doc) => {\r\n          reviews.push(doc.data());\r\n          sum += doc.data().overallRating;\r\n        });\r\n        setReviewList(reviews);\r\n        setAvgRating(sum / reviews.length);\r\n      }\r\n    );\r\n  }, [selectedCourse]);\r\n\r\n  if (returnToDashboard) {\r\n    return <Dashboard />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <IconButton onClick={handleReturnToDashboard}>\r\n            <ArrowBackIos />\r\n          </IconButton>\r\n          <img\r\n            src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n            height=\"50\"\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n\r\n        <Card className={classes.summaryCard}>\r\n          <Grid container alignItems=\"center\">\r\n            <div id=\"left\">\r\n              <h2>{selectedCourse.name}</h2>\r\n              <h3>{selectedCourse.code}</h3>\r\n            </div>\r\n\r\n            <div\r\n              id=\"middle\"\r\n              style={{\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                marginTop: \"auto\",\r\n              }}\r\n            >\r\n              <Stars rating={avgRating} user={\"average\"} />\r\n              <h3>{reviewList.length} reviews</h3>\r\n            </div>\r\n\r\n            <div id=\"right\" style={{ marginLeft: \"auto\" }}>\r\n              <h1>{(Math.round(avgRating * 100) / 100).toFixed(2)} / 5</h1>\r\n              <h3>Overall Rating</h3>\r\n            </div>\r\n          </Grid>\r\n        </Card>\r\n\r\n        <div align=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            className={classes.addReviewButton}\r\n            onClick={popUpAddReview}\r\n          >\r\n            Write a Review\r\n          </Button>\r\n          <AddReview\r\n            trigger={buttonPopup}\r\n            closed={closePopUp}\r\n            fromCourse={selectedCourse}\r\n          />\r\n        </div>\r\n\r\n        <Grid container justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            <h1>Reviews</h1>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <h2>Sort By</h2>\r\n          </Grid>\r\n          {reviewList.map((review) => (\r\n            <Accordion\r\n              key={\"accordian\" + review.user}\r\n              defaultExpanded\r\n              style={{\r\n                backgroundColor: \"#4198b5\",\r\n                borderRadius: 25,\r\n                width: isMobileOnly ? \"90vw\" : \"65vw\",\r\n                marginBottom: \"10px\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <AccordionSummary\r\n                key={\"accordianSummary\" + review.user}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography key={review.user} style={{ color: \"white\" }}>\r\n                  {review.user}\r\n                </Typography>\r\n                {\r\n                  // if NOT on mobile, stars and professor displayed in accordion summary\r\n                  !isMobileOnly && (\r\n                    <>\r\n                      <div style={{ marginLeft: \"auto\" }}>\r\n                        <Typography key={review.user + \"workload\"}>\r\n                          Workload:\r\n                        </Typography>\r\n                        <Stars\r\n                          rating={review.workloadRating}\r\n                          user={review.user}\r\n                        />\r\n                      </div>\r\n                      <div style={{ marginLeft: \"auto\" }}>\r\n                        <Typography key={review.user + \"diff\"}>\r\n                          Difficulty Of Content:\r\n                        </Typography>\r\n                        <Stars rating={review.diffRating} user={review.user} />\r\n                      </div>\r\n                      <div style={{ marginLeft: \"auto\" }}>\r\n                        <Typography\r\n                          key={\"prof\" + review.user}\r\n                          style={{ color: \"white\" }}\r\n                        >\r\n                          Professor: {review.prof}\r\n                        </Typography>\r\n                        <Stars rating={review.profRating} user={review.user} />\r\n                      </div>\r\n                    </>\r\n                  )\r\n                }\r\n              </AccordionSummary>\r\n\r\n              <AccordionDetails key={\"accordionDetails\" + review.user}>\r\n                <div>\r\n                  {\r\n                    // if on mobile, stars and professor displayed in accordion details\r\n                    isMobileOnly && (\r\n                      <div>\r\n                        <div>\r\n                          <Typography\r\n                            key={\"prof\" + review.user}\r\n                            style={{ color: \"white\", marginLeft: \"auto\" }}\r\n                          >\r\n                            Professor: {review.prof}\r\n                          </Typography>\r\n                          <Stars\r\n                            rating={review.profRating}\r\n                            user={review.user}\r\n                          />\r\n                        </div>\r\n                        <div style={{ marginTop: \"10px\" }}>\r\n                          <Typography key={review.user + \"workload\"}>\r\n                            Workload:\r\n                          </Typography>\r\n                          <Stars\r\n                            rating={review.workloadRating}\r\n                            user={review.user}\r\n                          />\r\n                        </div>\r\n                        <div style={{ marginTop: \"10px\" }}>\r\n                          <Typography key={review.user + \"diff\"}>\r\n                            Difficulty Of Content:\r\n                          </Typography>\r\n                          <Stars\r\n                            rating={review.diffRating}\r\n                            user={review.user}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  }\r\n\r\n                  <Typography\r\n                    key={\"description\" + review.user}\r\n                    align=\"left\"\r\n                    style={{ marginTop: \"10px\" }}\r\n                  >\r\n                    {review.description}\r\n                  </Typography>\r\n                </div>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(ReviewPage);\r\n","class IdleTimer {\r\n    constructor({timeout, onTimeout, onExpired}){\r\n        this.timeout = timeout;\r\n        this.onTimeout = onTimeout;\r\n\r\n            const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n            //console.log(\"current time is \" + Date.now());\r\n            //console.log(\"expire time is \" + expiredTime);\r\n            if(expiredTime > 0 && expiredTime < Date.now()){\r\n                //alert(\"expired\")\r\n                onExpired();\r\n                return;\r\n            }\r\n\r\n\r\n        //bind will keep the eventhandler function to current context\r\n        this.eventhandler = this.updateExpiredTime.bind(this);\r\n        this.tracker();\r\n        this.startInterval();\r\n    }\r\n\r\n\r\n    //initialize timer and check timeout every 1 second, onTimeout is the callback function to be executed after timeout\r\n    startInterval()\r\n    {\r\n        this.updateExpiredTime();\r\n\r\n        this.interval = setInterval(() => {\r\n            const expiredTime = parseInt(localStorage.getItem(\"_expiredTime\"), 10);\r\n            //console.log(expiredTime);\r\n            if(expiredTime < Date.now())\r\n            {\r\n                if(this.onTimeout)\r\n                {\r\n                    this.onTimeout();\r\n                    //this.cleanUp();\r\n                }\r\n            }\r\n    },1000);\r\n}\r\n\r\n    //update timeout time in the local storage whenever user has any movement, keep an additional timeoutTracker so only store expire time after user stops interaction for 300ms\r\n    updateExpiredTime()\r\n    {\r\n        if(this.timeoutTracker){\r\n            clearTimeout(this.timeoutTracker);\r\n        }\r\n        this.timeoutTracker = setTimeout(() => {\r\n            localStorage.setItem(\"_expiredTime\", Date.now() + this.timeout * 1000);\r\n        }, 300);\r\n       \r\n    }\r\n\r\n    //track user interactions including mousemove, scroll, keystroke and click\r\n    tracker()\r\n    {\r\n        window.addEventListener(\"mousemove\", this.eventhandler);\r\n        window.addEventListener(\"scroll\", this.eventhandler);\r\n        window.addEventListener(\"keydown\", this.eventhandler);\r\n        window.addEventListener(\"click\", this.eventhandler);\r\n    }\r\n\r\n    cleanUp() {\r\n        //console.log(\"expire time before cleanup is\" + parseInt(localStorage.getItem(\"_expiredTime\"), 10));\r\n        localStorage.removeItem(\"_expiredTime\");\r\n        //console.log(\"expire time after cleanup is\" + parseInt(localStorage.getItem(\"_expiredTime\"), 10));\r\n        clearInterval(this.interval);\r\n        window.removeEventListener(\"mousemove\", this.eventhandler);\r\n        window.removeEventListener(\"scroll\", this.eventhandler);\r\n        window.removeEventListener(\"keydown\", this.eventhandler);\r\n        window.removeEventListener(\"click\", this.eventhandler);\r\n    }\r\n}\r\nexport default IdleTimer;","import {\r\n  Avatar,\r\n  Card,\r\n  Grid,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  GridList,\r\n  GridListTile,\r\n  InputBase,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { isMobileOnly } from \"react-device-detect\";\r\nimport { logoutUser } from \"../actions\";\r\nimport AddReview from \"./AddReview\";\r\nimport ReviewPage from \"./ReviewPage\";\r\nimport { db, myFirebase } from \"../firebase/firebase\";\r\nimport IdleTimer from \"../actions/IdleTimer\";\r\n\r\n// CSS styling\r\nconst styles = () => ({\r\n  \"@global\": {\r\n    //makes scrollbar look less intrusive\r\n    \"*::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n    },\r\n    \"*::-webkit-scrollbar-track\": {\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n    },\r\n    \"*::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"#D6EAF8 \",\r\n      outline: \"1px solid slategrey\",\r\n    },\r\n  },\r\n  searchBar: {\r\n    backgroundColor: \"#7ae7ff\",\r\n    opacity: 0.5,\r\n    borderRadius: 25,\r\n    padding: \"10px\",\r\n  },\r\n  courseCard: {\r\n    backgroundColor: \"#fb9263\",\r\n    borderRadius: 25,\r\n    padding: \"20px\",\r\n    height: \"100px\",\r\n  },\r\n  gridList: {\r\n    width: \"90vw\",\r\n    height: \"auto\",\r\n    padding: \"15px\",\r\n  },\r\n  addReviewButton: {\r\n    width: isMobileOnly ? \"40vw\" : \"20vw\",\r\n    height: \"3rem\",\r\n    borderRadius: 25,\r\n    backgroundColor: \"#fb9263\",\r\n    marginBottom: \"25px\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nconst Dashboard = (props) => {\r\n  const [anchorEl, setAnchorEl] = useState(null); // anchor for menu, closed by default\r\n  const [courseList, setCourseList] = useState([]); // list of courses\r\n  const [selectedCourse, setSelectedCourse] = useState({}); // course to pass to ReviewPage\r\n  const [goToReviewPage, setGoToReviewPage] = useState(false); // mounts ReviewPage when true\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // value of input to search bar\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [isTimeout, setIsTimeout] = useState(false);\r\n  const [emailSent, sendEmail] = useState(false);\r\n  const { classes, isLoggingOut, logoutError, dispatch } = props;\r\n\r\n  // handles logout\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  // opens account menu (currently only option in menu is to Logout)\r\n  const handleOpenMenu = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n  };\r\n\r\n  // closes account menu\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const popUpAddReview = () => {\r\n    setButtonPopup(true);\r\n  };\r\n\r\n  const closePopUp = () => {\r\n    setButtonPopup(false);\r\n  };\r\n\r\n  // handles when a course is clicked on\r\n  const onCourseClick = (e) => {\r\n    const text = e.target.innerText;\r\n    for (let i = 0; i < courseList.length; i++) {\r\n      let course = courseList[i];\r\n      if (text.includes(course.name) || text.includes(course.code)) {\r\n        setSelectedCourse(course);\r\n        setGoToReviewPage(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Timer for timeout, timeout counter set to 900s (15min now)\r\n    const timer = new IdleTimer({\r\n      timeout: 900,\r\n      onTimeout: () => {\r\n        //console.log(\"In onTimeout\")\r\n        setIsTimeout(true);\r\n      },\r\n      onExpired: () => {\r\n        setIsTimeout(true);\r\n      },\r\n    });\r\n\r\n    if (isTimeout) {\r\n      dispatch(logoutUser());\r\n    }\r\n\r\n    // receives course data from Firebase and updates courseList and courseIDs in state\r\n    const unsubscribe = db.collection(\"courses\").onSnapshot((querySnapshot) => {\r\n      const courses = [];\r\n      querySnapshot.forEach((doc) => {\r\n        courses.push(doc.data());\r\n      });\r\n      setCourseList(courses);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      timer.cleanUp();\r\n    };\r\n  }, [dispatch, isTimeout]);\r\n\r\n  if (!myFirebase.auth().currentUser.emailVerified) {\r\n    return (\r\n      <div align=\"center\">\r\n        <h1>Verify Your Email!</h1>\r\n        <Button\r\n          style={{ backgroundColor: \"#fb9263\" }}\r\n          disabled={emailSent}\r\n          onClick={() => {\r\n            myFirebase.auth().currentUser.sendEmailVerification();\r\n            sendEmail(true);\r\n          }}\r\n        >\r\n          Resend Verification Email\r\n        </Button>\r\n        <Button\r\n          style={{ backgroundColor: \"#fb9263\" }}\r\n          onClick={() => {\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          Refresh Page\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else if (goToReviewPage) {\r\n    return <ReviewPage selectedCourse={selectedCourse} />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <IconButton onClick={handleOpenMenu} aria-controls=\"menu\">\r\n            <Avatar />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu\"\r\n            onClose={handleCloseMenu}\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n          >\r\n            <MenuItem key=\"logoutItem\" onClick={handleLogout}>\r\n              Logout\r\n            </MenuItem>\r\n          </Menu>\r\n\r\n          <h1 style={{ marginLeft: \"auto\" }}>Classes</h1>\r\n          <img\r\n            src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n            height=\"50\"\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n          <div className={classes.searchBar}>\r\n            <InputBase\r\n              placeholder=\"Course Name or Code...\"\r\n              onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n              }}\r\n              style={{ width: \"50vw\" }}\r\n            />\r\n            <Search style={{ color: \"#fb9263\" }} />\r\n          </div>\r\n\r\n          <GridList\r\n            className={classes.gridList}\r\n            // if user is on mobile then gridList has 1 column, otherwise it has 3 columns\r\n            cols={isMobileOnly ? 1 : 3}\r\n          >\r\n            {\r\n              // iterates through list of courses, creates Card/gridListTile, and adds it to gridList\r\n              // filters based on search term\r\n              courseList\r\n                .filter((course) => {\r\n                  if (searchTerm === \"\") {\r\n                    return course;\r\n                  } else if (\r\n                    course.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  ) {\r\n                    return course;\r\n                  } else if (\r\n                    course.code\r\n                      .replaceAll(\":\", \"\")\r\n                      .includes(searchTerm.replaceAll(\":\", \"\"))\r\n                  ) {\r\n                    return course;\r\n                  }\r\n                })\r\n                .map((course) => (\r\n                  <GridListTile\r\n                    key={\"GLT\" + course.code}\r\n                    style={{ height: \"auto\", padding: \"10px\" }}\r\n                  >\r\n                    <Card\r\n                      key={\"card\" + course.code}\r\n                      className={classes.courseCard}\r\n                      onClick={onCourseClick}\r\n                    >\r\n                      <Grid\r\n                        key={\"cardGrid\" + course.code}\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                      >\r\n                        <h3 key={course.code}>{course.code}</h3>\r\n                        <Typography key={course.name}>{course.name}</Typography>\r\n                      </Grid>\r\n                    </Card>\r\n                  </GridListTile>\r\n                ))\r\n            }\r\n          </GridList>\r\n\r\n          <div align=\"center\">\r\n            <h1>Can't Find the Class You're Looking For?</h1>\r\n            <Button\r\n              className={classes.addReviewButton}\r\n              onClick={popUpAddReview}\r\n            >\r\n              Add Class\r\n            </Button>\r\n            <AddReview trigger={buttonPopup} closed={closePopUp} />\r\n          </div>\r\n        </Grid>\r\n\r\n        {isLoggingOut && <p>Logging Out....</p>}\r\n        {logoutError && <p>Error logging out</p>}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggingOut: state.auth.isLoggingOut,\r\n    logoutError: state.auth.logoutError,\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(Dashboard));\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  isAuthenticated,\n  isVerifying,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isVerifying ? (\n        <div />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\nexport default ProtectedRoute;\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Typewriter = ({ text }) => {\r\n  const index = useRef(0);\r\n\r\n  const [currentText, setCurrentText] = useState(\"\");\r\n\r\n  //for animation\r\n\r\n  useEffect(() => {\r\n    if (index.current < text.length) {\r\n      setTimeout(() => {\r\n        setCurrentText((value) => value + text.charAt(index.current));\r\n        index.current += 1;\r\n      }, 200);\r\n    }\r\n  }, [currentText, text]);\r\n\r\n  return <h1>{currentText} </h1>;\r\n};\r\n\r\nexport default Typewriter;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport Typewriter from \"../actions/Typewriter.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"linear-gradient(145deg, #5F9EA0 20%, #ff7f50 70%)\",\r\n    color: \"white\",\r\n    height: \"3000px\",\r\n    maxWidth: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n});\r\n\r\nconst LandingPage = () => {\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1500 });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [directToLogin, setDirectToLogin] = useState(false);\r\n  const [directToSignup, setDirectToSignup] = useState(false);\r\n  const handleLoginClick = () => {\r\n    setDirectToLogin(true);\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    setDirectToSignup(true);\r\n  };\r\n\r\n  if (directToLogin === true) return <Redirect to=\"/login\" />;\r\n\r\n  if (directToSignup === true) return <Redirect to=\"/signup\" />;\r\n\r\n  return (\r\n    // The top bar with logo and sign up and login\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <img\r\n          src=\"https://cdn.discordapp.com/attachments/812822571094900746/837106499863969812/wyr_transparent.png\"\r\n          height=\"80\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginRight: \"10px\",\r\n            marginTop: \"10px\",\r\n          }}\r\n          alt=\"\"\r\n        />\r\n        <div\r\n          style={{ marginLeft: \"auto\", marginRight: \"10px\", marginTop: \"10px\" }}\r\n        >\r\n          <Button\r\n            disableElevation\r\n            size=\"large\"\r\n            style={{ borderRadius: 25, color: \"white\" }}\r\n            onClick={handleLoginClick}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            disableElevation\r\n            style={{ borderRadius: 25, marginLeft: \"10px\", maxHeight: \"30px\" }}\r\n            onClick={handleSignupClick}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n\r\n      {/* Large would you recommend section  */}\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"700px\",\r\n        }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <center style={{ fontSize: 40 }}>\r\n            <Typewriter text={\"Would You Recommend?\"} />\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <center>\r\n            <h1>\r\n              wyr is an informative and intuitive tool to help find, choose, and\r\n              organize your classes.\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          style={{\r\n            borderRadius: 25,\r\n            backgroundColor: \"#FF7F50\",\r\n            color: \"white\",\r\n            fontSize: 17,\r\n            fontWeight: \"bold\",\r\n            marginTop: \"50px\",\r\n            marginBottom: \"50px\",\r\n          }}\r\n          onClick={handleLoginClick}\r\n        >\r\n          add a review now\r\n        </Button>\r\n        <Grid item xs={12}>\r\n          <center>\r\n            <Typewriter text={\"Real Students, Real Reviews\"} />\r\n          </center>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <center>\r\n            <h1>\r\n              wyr makes sure that every review is authentic and not modified in\r\n              any way.\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        <Grid item xs={5}>\r\n          <img\r\n            data-aos=\"slide-right\"\r\n            src=\"/images/search_feature.PNG\"\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <center>\r\n            <h1 style={{ marginLeft: \"10px\" }}>\r\n              Search for topics of interests to find the perfect classes for you\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        <Grid item xs={4}>\r\n          <center>\r\n            <h1>Get simple overviews for classes with all the info you need</h1>\r\n          </center>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <img\r\n            data-aos=\"slide-left\"\r\n            src=\"/images/class_feature.PNG\"\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            style={{\r\n              marginLeft: \"10%\",\r\n            }}\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        <Grid item xs={5}>\r\n          <img\r\n            data-aos=\"slide-right\"\r\n            src=\"/images/review_feature.PNG\"\r\n            width=\"98%\"\r\n            max-height=\"98%\"\r\n            object-fit=\"contain\"\r\n            alt=\"\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <center>\r\n            <h1 style={{ marginLeft: \"10px\" }}>\r\n              Write reviews based on experience to help other students choose\r\n              their classes.\r\n            </h1>\r\n          </center>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        spacing={0}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          minHeight: \"500px\",\r\n        }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <center>\r\n            <h1>New things are coming soon, sign up to stay in the loop</h1>\r\n          </center>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          style={{\r\n            borderRadius: 25,\r\n            backgroundColor: \"white\",\r\n            color: \"#FF7F50\",\r\n            fontSize: 17,\r\n            fontWeight: \"bold\",\r\n          }}\r\n          onClick={handleSignupClick}\r\n        >\r\n          sign up now\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport SignupPage from \"./components/SignupPage\";\r\nimport ForgotpassPage from \"./components/ForgotpassPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport { connect } from \"react-redux\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport LandingPage from \"./components/LandingPage\";\r\n\r\nfunction App(props) {\r\n  const { isAuthenticated, isVerifying } = props;\r\n  return (\r\n    <Switch>\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/dashboard\"\r\n        component={Dashboard}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route exact path=\"/login\" component={LoginPage} />\r\n      <Route exact path=\"/signup\" component={SignupPage} />\r\n      <Route exact path=\"/forgotpassword\" component={ForgotpassPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isVerifying: state.auth.isVerifying,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n} from \"../actions/\";\r\n\r\nconst reducerAuth = (\r\n  state = {\r\n    isLoggingIn: false,\r\n    isLoggingOut: false,\r\n    isVerifying: false,\r\n    loginError: false,\r\n    logoutError: false,\r\n    isAuthenticated: false,\r\n    user: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        loginError: true,\r\n      };\r\n    case LOGOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n        logoutError: false,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n    case LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        logoutError: true,\r\n      };\r\n    case VERIFY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isVerifying: true,\r\n        verifyingError: false,\r\n      };\r\n    case VERIFY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isVerifying: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({ auth });","import React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport configureStore from \"./configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nfunction Root() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default Root;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport { verifyAuth } from \"./actions/\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(persistedState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    applyMiddleware(thunkMiddleware)\r\n  );\r\n  store.dispatch(verifyAuth());\r\n  return store;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}